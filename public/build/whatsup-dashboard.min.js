/*! whatsup 2016-12-01 */
var define=function(a){var b=a,c=b.extend,d=null;return null==c||"undefined"==typeof c?(d=function(){"undefined"!=typeof this.initialize&&this.initialize.apply(this,arguments)},d.prototype=b):(d=function(){var a="function"==typeof this.initialize?this.initialize:"undefined";"function"==typeof a&&a.apply(this,arguments)},extend(d,c),copy(d.prototype,b)),d},extend=function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c,a.prototype.constructor=a,a.parent=b.prototype},copy=function(a,b){if(a=a||{},b){for(var c in b){var d=b[c];void 0!==d&&(a[c]=d)}var e="function"==typeof window.Event&&b instanceof window.Event;!e&&b.hasOwnProperty&&b.hasOwnProperty("toString")&&(a.toString=b.toString)}return a};app.Map.LeafletViewer=define({name:"LeafletViewer",extend:app.Map.MapViewer,_className:"LeafletViewer",initialize:function(a){app.Map.MapViewer.prototype.initialize.apply(this,arguments);var b=L.tileLayer("http://{s}.tiles.mapbox.com/v3/esrgc.map-y9awf40v/{z}/{x}/{y}.png"),c={"Base Map":b};this.features=new L.FeatureGroup([]),this.geoJsonFeatures=L.geoJson(),this.clusterGroup=new L.MarkerClusterGroup(this.clusterOptions);var d={Overlays:this.geoJsonFeatures};if(this.map=L.map(this.el,{layers:[b,this.features,this.geoJsonFeatures,this.clusterGroup],center:this.center||new L.LatLng(39,-76.7),zoom:this.zoomLevel||7,scrollWheelZoom:this.scrollZoom||!1}),"undefined"!=typeof this.baseLayers)for(var e in this.baseLayers){var f=this.baseLayers[e];void 0!==f&&(c[e]=f)}var d={Overlays:this.geoJsonFeatures};if("undefined"!=typeof this.overlays)for(var e in this.overlays){var f=this.overlays[e];d[e]=f}},getGeoJsonGroup:function(){return this.geoJsonFeatures},getFeatureGroup:function(){return this.features},addGeoJsonLayer:function(a,b){return"undefined"==typeof a?void console.log("No data found"):(console.log("Adding data to map..."),"undefined"!=this.geoJsonFeatures&&("undefined"==typeof b?this.geoJsonFeatures.addLayer(L.geoJson(a)):this.geoJsonFeatures.addLayer(L.geoJson(a,b))),void console.log("------Data added to map"))},clearGeoJsonFeatures:function(){"undefined"!=this.geoJsonFeatures&&this.geoJsonFeatures.clearLayers()},addFeatureToFeatureGroup:function(a){var b=this.features;return"undefined"==typeof b?void console.log("No feature group found"):void(null!=a&&b.addLayer(a))},clearFeatures:function(){var a=this.features;return"undefined"==typeof a?void console.log("No feature group found"):void a.clearLayers()},createFeature:function(a){var b=new Wkt.Wkt;b.read(a);var c=b.toObject();return c},createMarker:function(a,b,c){return L.marker(L.latLng(a,b),c)},addClusterMarker:function(a){"undefined"!=typeof this.clusterGroup&&this.clusterGroup.addLayer(a)},clearClusterMarkers:function(){this.clusterGroup.clearLayers()},getClusterGroup:function(){return this.clusterGroup},getFeaturesBound:function(){var a=this.features;return"undefined"==typeof a?void console.log("No feature group found"):a.getBounds()},getGeoJsonFeaturesBound:function(){var a=this.geoJsonFeatures;return"undefined"==typeof a?void console.log("No geojson feature found"):a.getBounds()},zoomToFeatures:function(){var a=this.getFeaturesBound();"undefined"!=typeof a&&this.map.fitBounds(a)},zoomToGeoJsonFeatures:function(){var a=this.getGeoJsonFeaturesBound();"undefined"!=typeof a&&this.map.fitBounds(a)},zoomToPoint:function(a,b){var c=b||this.map.getMaxZoom();if("undefined"!=typeof a.x&&"undefined"!=typeof a.y){var d=new L.LatLng(a.y,a.x);this.map.setView(d,c)}else this.map.setView(a,c)},pointInPolygon:function(a,b){for(var c=a[0],d=a[1],e=!1,f=0,g=b.length-1;f<b.length;g=f++){var h=b[f][0],i=b[f][1],j=b[g][0],k=b[g][1],l=i>d!=k>d&&c<(j-h)*(d-i)/(k-i)+h;l&&(e=!e)}return e}}),app.Map.MapViewer=define({name:"MapViewer",_className:"MapViewer",initialize:function(a){copy(this,a)},zoomToExtent:function(a){this.map.fitBounds(new L.LatLngBounds(new L.LatLng(a.xmin,a.ymin),new L.LatLng(a.xmax,a.ymax)))},zoomToFullExtent:function(){},zoomToXY:function(a,b,c){"undefined"==typeof c?this.map.setView(new L.LatLng(b,a),this.map.getMaxZoom()):this.map.setView(new L.LatLng(b,a),c)},zoomIn:function(){this.map.zoomIn()},zoomOut:function(){this.map.zoomOut()},zoomToDataExtent:function(a){this.map.fitBounds(a.getBounds())},panTo:function(a,b){this.map.panTo(new L.LatLng(b,a))},locate:function(){this.map.locateAndSetView(this.map.getMaxZoom()-2)}});var getDaysInMonth=function(a,b){for(var c=new Date(b,a,1),d=[];c.getMonth()===a;)d.push(new Date(c)),c.setDate(c.getDate()+1);return d},todayDate=new Date,daysOfMonth=getDaysInMonth(todayDate.getMonth(),todayDate.getFullYear()),dayLabels=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],monthLabels=["January","February","March","April","May","June","July","August","September","October","November","December"],daysInMonth=[31,28,31,30,31,30,31,31,30,31,30,31];Date.prototype.toShortTimeString=function(){var a=this.getHours(),b=this.getMinutes(),c=a>12?"pm":"am";a%=12,a=a?a:12,b=b<10?"0"+b:b;var d=a+":"+b+c;return d},app.Shared.Calendar=define({name:"Calendar",_className:"Calendar",initialize:function(a,b){this.month=isNaN(a)||null==a?todayDate.getMonth():a,this.year=isNaN(b)||null==b?todayDate.getFullYear():b},html:"",generateHtml:function(){var a=new Date(this.year,this.month,1),b=a.getDay(),c=daysInMonth[this.month];1==this.month&&(this.year%4==0&&this.year%100!=0||this.year%400==0)&&(c=29);for(var d=monthLabels[this.month],e="",f="",g=0;g<7;g++)e+="<th>"+dayLabels[g]+"</th>";var h=1,i=this.month-1<0?11:this.month-1;lastMonthDay=daysInMonth[i],nextMonthDay=1;for(var g=0;g<9;g++){f+="<tr>";for(var j=0;j<7;j++)if(h<=c&&(j>=b||g>0))f+=h==todayDate.getDate()&&todayDate.getMonth()==this.month&&todayDate.getFullYear()==this.year?'<td class="today" id="'+(this.month+1)+"-"+h+'">'+h+'<div class="day-event"></div></td>':'<td id="'+(this.month+1)+"-"+h+'">'+h+'<div class="day-event"></div></td>',h++;else if(j<b&&0==g){var k=lastMonthDay-(b-j-1);f+='<td class="gray-out">'+k+"</td>"}else f+='<td class="gray-out">'+nextMonthDay++ +"</td>";if(f+="</tr>",h>c)break}var l=["<h4>",d+", "+this.year,"</h4>",'<table class="calendar-table table table-bordered">',"<thead>","<tr>",e,"</tr>","</thead>","<tbody>",f,"</tbody>","</table>"].join("");return l},setMonth:function(a){if("undefined"!=typeof a)return isNaN(a)||null==a?void console.log("Month must be a valid month number"):void(this.month=a)},incrementMonth:function(){this.month+=1,this.month>11&&(this.year++,this.month=0)},decrementMonth:function(){this.month-=1,this.month<0&&(this.year--,this.month=11)},getMonth:function(){return this.month+1},getYear:function(){return this.year}}),app.Collection.BaseCollection=Backbone.Collection.extend({name:"BaseCollection",socrataUrl:"",limit:25e3,getData:function(){return this.toJSON()},queryCriterias:{},setCriterias:function(a){copy(this.queryCriterias,a)},prepareQuery:function(){},fetchData:function(a,b){var c=this;c.setCriterias(a),c.prepareQuery(),this.fetch({reset:!0,data:c.query,success:function(a,d){"function"==typeof c.onDataLoaded&&c.onDataLoaded.call(c,c),"function"==typeof b&&b.call(this,this)},error:function(a){console.log(a)}})}}),app.View.Map=Backbone.View.extend({name:"base-map",el:".map",type:"map",mapControlsTemplate:"#map-control-tpl",mapData:[],mapDataLoaded:!1,selectedLayer:"County",selectedFeature:null,selectedFeatureName:"",selectedLayers:[],singleSelect:!1,mapParams:{areatype:"01",areacode:"0"},showMarkers:!0,clusterMarkerCache:[],initialize:function(){},render:function(a){this.makeMap(),this.loadMapData(a),this.renderControls(),console.log(this.name+" view has been rendered..")},makeMap:function(){this.mapViewer=new app.Map.LeafletViewer({el:this.el,center:new L.LatLng(38.3607,-75.5994),zoomLevel:10,scrollZoom:!0,clusterOptions:{showCoverageOnHover:!1,spiderfyOnMaxZoom:!0,maxClusterRadius:40,iconCreateFunction:function(a){var b=a.getChildCount(),c=" marker-cluster-";return c+=b<=5?"small":b<=10?"medium":"large",new L.DivIcon({html:"<div><span>"+b+"</span></div>",className:"marker-cluster"+c,iconSize:new L.Point(40,40)})}}})},loadMapData:function(a){var b=this,c=new Backbone.Model,d=this.mapData,e=0,f=function(g){return"undefined"==typeof g?void("function"==typeof b.onMapLoaded&&b.onMapLoaded()):void("layer"==g.type?(c.url=g.url,c.fetch({success:function(c){console.log("loaded map data for "+g.name);var h=c.toJSON();g.data=h,e++,e<d.length?f(d[e]):(b.mapDataLoaded=!0,b.showLayer(b.selectedLayer,a),"function"==typeof b.onMapLoaded&&b.onMapLoaded())}})):(e++,e<d.length?this.loadData(d[e]):(b.mapDataLoaded=!0,b.showLayer(b.selectedLayer,a),"function"==typeof b.onMapLoaded&&b.onMapLoaded())))};f(d[e])},showLayer:function(a,b){console.log("showing  layer "+a);var c=this,d=!1,e=this.getLayer(a);if("undefined"!=typeof e){c.selectedLayer=a,c.selectedFeatureName="",c.selectedFeature=null,c.selectedLayers=[];c.getGeomName();c.updateHoverText();var f=this.mapViewer,g=e.data,h=e.nameField,i=e.style,j={fillOpacity:.2},k=e.selectedStyle||{opacity:1,color:"#FCFF00",weight:4};console.log(b),"undefined"!=typeof b&&(b.style&&(i=b.style),b.mouseoverStyle&&(j=b.mouseoverStyle),b.selectedStyle&&(k=b.selectedStyle)),f.clearGeoJsonFeatures(),f.addGeoJsonLayer(g,{style:i,onEachFeature:function(a,b){d||(d=!0,c.mapParams.areatype=a.properties.areatype),b.on("click",function(b){var d=f.getGeoJsonGroup();_.each(d.getLayers(),function(a){_.each(a.getLayers(),function(b){a.resetStyle(b)})});for(var e=b.target,g=null,i=0;i<c.selectedLayers.length;i++){var j=c.selectedLayers[i];e.feature.properties.areacode==j.feature.properties.areacode&&(g=i)}if(null!=g?c.selectedLayers.splice(g,1):(1==c.singleSelect&&(c.selectedLayers=[]),c.selectedLayers.push(e)),c.selectedLayers.length>0){var l=c.selectedLayers[c.selectedLayers.length-1];c.selectedFeature=l,c.selectedFeatureName=l.feature.properties.name||l.feature.properties.region||l.feature.properties[h]||""}else c.selectedFeature=null;var m,n=null,o=[];_.each(c.selectedLayers,function(a){a.setStyle(k);var b=a.feature.properties;"undefined"!=typeof b.areatype&&"undefined"!=typeof b.areacode&&(null==n&&(n=b.areatype),o.push(b.areacode))}),m=o.length>0?{areatype:n,areacode:o.join(",")}:{areatype:n,areacode:"0"},c.mapParams=m,"function"==typeof c.onGeomSelected&&c.onGeomSelected.call(c,a,c.selectedLayers)}),b.on("mouseover",function(a){var b=a.target;b.setStyle(j),L.Browser.ie||L.Browser.opera||b.bringToFront();var d=a.target.feature.properties,e=d.name||d.region||d[h]||"";c.$("#hoverOverlay").text(e),"function"==typeof c.onFeatureMouseover&&c.onFeatureMouseover(b)}),b.on("mouseout",function(a){var d=f.getGeoJsonGroup();_.each(d.getLayers(),function(b){b.resetStyle(a.target)}),_.each(c.selectedLayers,function(a){a.setStyle(k)}),c.updateHoverText(),"function"==typeof c.onFeatureMouseout&&c.onFeatureMouseout(b)})}})}},getLayer:function(a){for(var b in this.mapData){var c=this.mapData[b];if(c.name==a)return c}},renderControls:function(){var a=this,b=this.mapData,c=Handlebars.compile($(this.mapControlsTemplate).html()),d=c({models:b});this.$("div.leaflet-bottom.leaflet-left").html(d),this.$(".overlays div.layers").on("click",function(b){a.mapControlClick.call(a,b)}),this.$("div.leaflet-top.leaflet-right").append('<div id="hoverOverlay" class="layerToggle" style="display: block;"></div>'),this.$("div.leaflet-top.leaflet-left .leaflet-control-zoom-in").after([' <a class="leaflet-control-zoom-out" id="zoomToExtent"',' href="#" title="Zoom to Full-extent">','<i class="fa fa-globe"></i>',"</a>"].join("")),this.$("#zoomToExtent").on("click",function(b){return a.mapViewer.zoomToGeoJsonFeatures(),!1})},mapControlClick:function(a){var b=a.currentTarget,c=$(b).attr("data-name");console.log("map layer "+c+" control clicked"),this.showLayer(c),this.$(b).parent().find('i[role="checkbox"]').remove(),$(b).find("p").append('<i class="fa fa-check" role="checkbox"></i>'),"function"==typeof this.onLayerChanged&&this.onLayerChanged.call(this,c)},getGeomName:function(){var a="";return a=this.selectedLayers.length>1?"Multi Areas":null==this.selectedFeature?"Statewide":this.selectedLayer+" "+this.selectedFeatureName},updateHoverText:function(){var a=this.getGeomName();this.$("#hoverOverlay").text(a)},getCurrentParams:function(){var a=this,b=null,c=[];return _.each(a.selectedLayers,function(a){var d=a.feature.properties;"undefined"!=typeof d.areatype&&"undefined"!=typeof d.areacode&&(null==b&&(b=d.areatype),c.push(d.areacode))}),c.length>0?{areatype:b,areacode:c.join(",")}:{areatype:b,areacode:"0"}},selectGeom:function(a,b){var c=this,d=this.mapViewer,e=d.getGeoJsonGroup(),f=b||{fillOpacity:.5};_.each(a,function(a){var b=null;e.getLayers()[0].eachLayer(function(d){b=d.feature,"undefined"!=typeof b&&b.properties.name.toLowerCase()==a.toLowerCase()&&(d.setStyle(f),c.selectedFeature=d,c.selectedFeatureName=a,c.selectedLayers.push(d))}),c.updateHoverText(),"function"==typeof this.onGeomSelected&&this.onGeomSelected.call(this,b)})},addClusterMarkers:function(a){var b=this.mapViewer;return b.clearClusterMarkers(),"undefined"==typeof a?a=this.clusterMarkerCache:this.clusterMarkerCache=a,0==a.length?void console.log("Can not add cluster markers. Data is empty."):void(this.showMarkers&&_.each(a,function(a){var c=b.createMarker(a.y_coord,a.x_coord,{});c.bindPopup([].join(""),{}),b.addClusterMarker(c)}))},clearClusterMarkers:function(){var a=this.mapViewer;a.clearClusterMarkers()},setShowMarkers:function(a){this.showMarkers=a,a?this.addClusterMarkers():this.clearClusterMarkers()},zoomToLocation:function(a,b){this.mapViewer.zoomToPoint({x:a,y:b},14)},setMapClickMode:function(a){"single"==a?this.singleSelect=!0:"multi"==a?this.singleSelect=!1:this.singleSelect?console.log("Map click mode is: Single selection"):console.log("Map click mode is: Multi selection")}});