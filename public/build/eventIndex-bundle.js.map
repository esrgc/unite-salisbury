{"version":3,"sources":["webpack:///eventIndex-bundle.js","webpack:///webpack/bootstrap 59ad49ab73e631f00e49","webpack:///./public/js/event/index/index.js","webpack:///./public/js/util/class.js","webpack:///./public/js/event/index/controller/main.js","webpack:///./public/js/event/index/router/main.js","webpack:///./public/js/event/index/view/calendar.js","webpack:///./public/js/event/index/view/map.js","webpack:///./public/js/map/leafletViewer.js","webpack:///./public/js/map/mapViewer.js","webpack:///./public/js/shared/view/map.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","MainRouter","$","Backbone","history","start","console","log","define","child","ch","extend","_class_","this","initialize","apply","arguments","prototype","init","copy","parent","F","constructor","dest","source","property","value","undefined","sourceIsEvt","window","Event","hasOwnProperty","toString","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","MapView","CalendarView","mainController","_mapView","_calendarView","scope","render","onEventsLoaded","eventData","view","group","_","groupBy","v","data","map","index","local","format","end","_id","x_coord","location","x","y_coord","y","template","title","description","address","city","state","zip","addClusterMarkers","onEventClick","event","jsEvent","zoomToLocation","onEventMouseOver","get","MainController","controller","mainRouter","Router","name","routes","",":x/:y","initZoom","Calendar","View","el","fullCalendar","header","left","center","right","editable","eventSources","url","eventLimit","eventMouseover","eventClick","loading","isLoading","BaseMap","mapData","makeMap","onMapLoaded","Class","MapViewer","LeafletViewer","_className","options","minimal","L","tileLayer","baseMaps","Base Map","features","FeatureGroup","geoJsonFeatures","geoJson","clusterGroup","MarkerClusterGroup","clusterOptions","overlayMaps","Overlays","layers","LatLng","zoom","zoomLevel","scrollWheelZoom","scrollZoom","baseLayers","layer","overlays","getGeoJsonGroup","getFeatureGroup","addGeoJsonLayer","option","addLayer","clearGeoJsonFeatures","clearLayers","addFeatureToFeatureGroup","feature","clearFeatures","createFeature","obj","wkt","Wkt","read","f","toObject","createMarker","lat","lng","marker","latLng","addClusterMarker","clearClusterMarkers","getClusterGroup","getFeaturesBound","getBounds","getGeoJsonFeaturesBound","zoomToFeatures","bounds","fitBounds","zoomToGeoJsonFeatures","zoomToPoint","point","z","getMaxZoom","latlng","setView","pointInPolygon","vs","inside","j","xi","yi","xj","yj","intersect","zoomToExtent","extent","LatLngBounds","xmin","ymin","xmax","ymax","zoomToFullExtent","zoomToXY","level","zoomIn","zoomOut","zoomToDataExtent","panTo","locate","locateAndSetView","type","mapControlsTemplate","mapDataLoaded","selectedLayer","selectedFeature","selectedFeatureName","selectedLayers","singleSelect","mapParams","areatype","areacode","showMarkers","clusterMarkerCache","loadMapData","renderControls","mapViewer","showCoverageOnHover","spiderfyOnMaxZoom","maxClusterRadius","iconCreateFunction","cluster","childCount","getChildCount","DivIcon","html","className","iconSize","Point","model","Model","counter","loadData","fetch","success","newData","toJSON","showLayer","setInitialAreaType","getLayer","getGeomName","updateHoverText","nameField","layerStyle","style","mouseoverStyle","fillOpacity","selectedStyle","opacity","color","weight","onEachFeature","properties","on","e","layerGroup","each","getLayers","l","resetStyle","splice","push","sl","region","params","areacodes","setStyle","join","onGeomSelected","Browser","ie","opera","bringToFront","prop","area","text","onFeatureMouseover","onFeatureMouseout","Handlebars","compile","models","mapControlClick","append","after","currentTarget","attr","find","remove","onLayerChanged","getCurrentParams","selectGeom","featureNames","selectStyle","geoJsonGrp","eachLayer","toLowerCase","popupTemplate","d","bindPopup","setShowMarkers","lon","lvl","setMapClickMode","mode"],"mappings":"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","file":"eventIndex-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tTu Hoang\t\r\n\tESRGC2017\r\n\t\r\n\tmap view package\r\n\t\r\n\t*/\n\t\n\tvar MainRouter = __webpack_require__(4);\n\t\n\t$(function () {\n\t  var router = new MainRouter();\n\t  //finally starts backbone history;\n\t  Backbone.history.start();\n\t  console.log('App initiated...');\n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/*\r\n\tTu Hoang\r\n\tESRGC\r\n\t2014\r\n\t\r\n\tclass.js\r\n\tutility functions that implements OOP\r\n\t*/\n\t\n\t/*\r\n\tfunction that defines a new class by passing a new\r\n\tprototype object (literal) as parameter. New classes\r\n\tcan extend/inherit from other classes by passing the \r\n\tinherit class name to extend property of the new class \r\n\tprototype object\r\n\t\r\n\tExample:\r\n\tvar newClass = dx.define({\r\n\textend: OtherClass,\r\n\tinitialize: function(options){\r\n\t};\r\n\t});\r\n\t*/\n\tvar define = function define(child) {\n\t  var ch = child;\n\t  var p = ch.extend;\n\t  var _class_ = null;\n\t  if (p == null || typeof p == 'undefined') {\n\t    _class_ = function _class_() {\n\t      if (typeof this.initialize != 'undefined') this.initialize.apply(this, arguments);\n\t    };\n\t    _class_.prototype = ch;\n\t  } else {\n\t    _class_ = function _class_() {\n\t      var init = typeof this.initialize == 'function' ? this.initialize : 'undefined';\n\t      //run child initialize function if exists\n\t      if (typeof init == 'function') {\n\t        init.apply(this, arguments);\n\t      }\n\t    };\n\t    extend(_class_, p); //inherit prototype\n\t    copy(_class_.prototype, ch); //augment prototype\n\t  }\n\t  return _class_;\n\t};\n\t/*\r\n\tDeep copy object prototype by new keyword.\r\n\tThis method creates a new prototype object, whose prototype \r\n\tis a copy of the parent's prototype, and assign it to the child prototype.\r\n\tFinally, sets the child's prototype constructor to the child's constructor\r\n\t*/\n\tvar extend = function extend(child, parent) {\n\t  var F = function F() {};\n\t  F.prototype = parent.prototype;\n\t  child.prototype = new F();\n\t  child.prototype.constructor = child;\n\t  child.parent = parent.prototype;\n\t};\n\t//copy object properties\n\tvar copy = function copy(dest, source) {\n\t  dest = dest || {};\n\t  if (source) {\n\t    for (var property in source) {\n\t      var value = source[property];\n\t      if (value !== undefined) {\n\t        dest[property] = value;\n\t      }\n\t    }\n\t    /**\r\n\t     * IE doesn't include the toString property when iterating over an object's\r\n\t     * properties with the for(property in object) syntax.  Explicitly check if\r\n\t     * the source has its own toString property.\r\n\t     */\n\t    /*\r\n\t     * FF/Windows < 2.0.0.13 reports \"Illegal operation on WrappedNative\r\n\t     * prototype object\" when calling hawOwnProperty if the source object\r\n\t     * is an instance of window.Event.\r\n\t     */\n\t\n\t    var sourceIsEvt = typeof window.Event == \"function\" && source instanceof window.Event;\n\t\n\t    if (!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty(\"toString\")) {\n\t      dest.toString = source.toString;\n\t    }\n\t  }\n\t  return dest;\n\t};\n\t\n\tmodule.exports = {\n\t  define: define,\n\t  extend: extend,\n\t  copy: copy\n\t};\n\n/***/ }),\n/* 2 */,\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\r\n\tTu Hoang\r\n\tMarch 2017\r\n\t\r\n\tController class that handles map and calendar view \r\n\t\r\n\tES6 rocks\r\n\t*/\n\tvar MapView = __webpack_require__(6);\n\tvar CalendarView = __webpack_require__(5);\n\t\n\tvar mainController = function () {\n\t  function mainController() {\n\t    _classCallCheck(this, mainController);\n\t\n\t    //views\n\t    this._mapView = new MapView();\n\t    this._calendarView = new CalendarView();\n\t  }\n\t  //initialize view components \n\t\n\t\n\t  _createClass(mainController, [{\n\t    key: 'initialize',\n\t    value: function initialize() {\n\t      console.log('Initializing...');\n\t      var scope = this;\n\t      //render map\n\t      scope._mapView.render();\n\t      //wire event callback for calendar\n\t      scope._calendarView.onEventsLoaded = function (eventData, view) {\n\t        console.log('this event is called from controller!');\n\t        console.log(eventData);\n\t        var group = _.groupBy(eventData, function (v) {\n\t          return v.id;\n\t        });\n\t        var data = _.map(group, function (v, index) {\n\t          var value = v[0]; //only take the first element\n\t          var start = value.start.local().format('dddd, MMMM Do YYYY, h:mm:ss a');\n\t          var end = value.end != null ? value.end.local().format('dddd, MMMM Do YYYY, h: mm: ss a') : '';\n\t          return {\n\t            id: value._id,\n\t            x_coord: value.location.x,\n\t            y_coord: value.location.y,\n\t            template: '\\n      \\t\\t\\t<h4>\\n              <strong>' + value.title + '</strong>\\n              <small>\\n                <a href=\"edit?id=' + value._id + '\"><i class=\"fa fa-pencil\"></i></a>\\n              </small>\\n            </h4>\\n      \\t\\t\\t<p>\\n      \\t\\t\\t\\t<strong>Start</strong>: ' + start + ' <br/>\\n      \\t\\t\\t\\t<strong>End</strong>: ' + end + ' <br/>\\n      \\t\\t\\t\\t<strong>Description</strong>: ' + value.description + ' <br/>\\n      \\t\\t\\t\\t<strong>Location</strong>: ' + value.address + ' ' + value.city + ', ' + value.state + ' ' + value.zip + '\\n      \\t\\t\\t</p>\\n      \\t\\t'\n\t          };\n\t        });\n\t\n\t        // console.log(g);\n\t\n\t        scope._mapView.addClusterMarkers(data);\n\t      };\n\t\n\t      scope._calendarView.onEventClick = function (event, jsEvent, view) {\n\t\n\t        var location = event.location;\n\t        if (typeof location == 'undefined') return;\n\t        scope._mapView.zoomToLocation(location.x, location.y);\n\t      };\n\t      scope._calendarView.onEventMouseOver = function (event, jsEvent, view) {\n\t        //for editing\n\t      };\n\t\n\t      //render calendar\n\t      scope._calendarView.render();\n\t    }\n\t  }, {\n\t    key: 'zoomToLocation',\n\t    value: function zoomToLocation(x, y) {\n\t      this._mapView.zoomToLocation(x, y, 16);\n\t    }\n\t  }, {\n\t    key: 'mapView',\n\t    get: function get() {\n\t      return this._mapView;\n\t    }\n\t  }, {\n\t    key: 'calendarView',\n\t    get: function get() {\n\t      return this._calendarView;\n\t    }\n\t  }]);\n\t\n\t  return mainController;\n\t}();\n\t\n\tmodule.exports = mainController;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tTu Hoang\r\n\tMarch 2017\r\n\t\r\n\tmain router for event/index page\r\n\t*/\n\t\n\t// var MapView = require('../view/map.js');\n\t// var CalendarView = require('../view/calendar');\n\t\n\t// //views\n\t// var mapView = new MapView();\n\t// var calendarView = new CalendarView();\n\t\n\tvar MainController = __webpack_require__(3);\n\tvar controller = new MainController();\n\t\n\t//router definition\n\tvar mainRouter = Backbone.Router.extend({\n\t  name: 'EventIndex',\n\t  routes: {\n\t    '': 'init',\n\t    ':x/:y': 'initZoom'\n\t  },\n\t  init: function init() {\n\t    //initialize components\n\t    controller.initialize();\n\t\n\t    //return controller;\n\t  },\n\t  initZoom: function initZoom(x, y) {\n\t    undefined.init();\n\t    controller.zoomToLocation(x, y);\n\t  }\n\t});\n\t\n\tmodule.exports = mainRouter;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/*\r\n\tTu Hoang\r\n\tMarch 2017\r\n\t\r\n\tCalendar view\r\n\t\r\n\tevent callbacks: \r\n\tonEventClick(event, jsEvent, view)\r\n\tonEventsLoaded(eventData, view)\r\n\t\r\n\t*/\n\t\n\tvar Calendar = Backbone.View.extend({\n\t  name: 'CalendarView',\n\t  el: '#calendar-area',\n\t  render: function render() {\n\t    var scope = this;\n\t    this.$('#calendar').fullCalendar({\n\t      //init full calendar \n\t      header: {\n\t        left: 'prev,next,today',\n\t        center: 'title',\n\t        right: 'month,agendaWeek,agendaDay,listMonth'\n\t      },\n\t      editable: false,\n\t      eventSources: [\n\t      //event feed\n\t      {\n\t        url: 'feed' // use the `url` property\n\t        // color: 'yellow', // an option!\n\t        // textColor: 'black' // an option!\n\t      }\n\t\n\t      // any other sources...\n\t\n\t      ],\n\t      eventLimit: true,\n\t      eventMouseover: function eventMouseover(event, jsEvent, view) {\n\t        //register call back and trigger here\n\t        if (typeof scope.onEventMouseOver == 'function') scope.onEventMouseOver.call(scope, event, jsEvent, view);\n\t      },\n\t      eventClick: function eventClick(event, jsEvent, view) {\n\t        console.log(event);\n\t        //register call back and trigger here\n\t        if (typeof scope.onEventClick == 'function') scope.onEventClick.call(scope, event, jsEvent, view);\n\t      },\n\t      loading: function loading(isLoading, view) {\n\t        if (!isLoading) {\n\t          console.log('done fetching event data!');\n\t          var eventData = $('#calendar').fullCalendar('clientEvents');\n\t          // console.log(eventData);\n\t          if (typeof scope.onEventsLoaded == 'function') {\n\t            scope.onEventsLoaded.call(scope, eventData, view);\n\t          }\n\t        }\n\t      }\n\t\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = Calendar;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tAuthor: Tu Hoang\r\n\tESRGC2017\r\n\t\r\n\tView Map\r\n\t\r\n\t\r\n\tRequires leaflet.js\r\n\t\r\n\tEvents \r\n\tonMapLoaded --fired when map is done initialized\r\n\tonLayerChanged -- fired when new data is loaded to geojson\r\n\tonGeomSelected -- fired when mouse clicked layer (geometry)\r\n\tonFeatureMouseover -- fired when mouse is over a layer (geometry)\r\n\tonFeatureMouseout -- fired when mouse is out of a layer (geometry)\r\n\t\r\n\tsetMapClickMode -- set selection mode (single or multi)\r\n\t*/\n\tvar BaseMap = __webpack_require__(9);\n\t\n\tvar map = BaseMap.extend({\n\t  name: 'unite-map',\n\t  el: '.map',\n\t  mapData: [], //specified geojson layers (in sub views)\n\t  render: function render() {\n\t    var scope = this;\n\t    scope.makeMap(); //set up map\n\t    if (typeof scope.onMapLoaded == 'function') {\n\t      scope.onMapLoaded();\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = map;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tAuthor: Tu hoang\r\n\tESRGC\r\n\tProvides base (prototype) functions for mapviewer\r\n\tNote: this class is defined using dx library\r\n\t\r\n\timplements leaflet API\r\n\toperates foodshed application\r\n\t*/\n\tvar Class = __webpack_require__(1);\n\tvar MapViewer = __webpack_require__(8);\n\t\n\tvar LeafletViewer = Class.define({\n\t  name: 'LeafletViewer',\n\t  extend: MapViewer,\n\t  _className: 'LeafletViewer',\n\t  initialize: function initialize(options) {\n\t    MapViewer.prototype.initialize.apply(this, arguments);\n\t    //map setup\n\t    var minimal = L.tileLayer('https://{s}.tiles.mapbox.com/v3/esrgc.map-y9awf40v/{z}/{x}/{y}.png');\n\t    //var satellite = L.tileLayer('http://{s}.tiles.mapbox.com/v3/esrgc.map-0y6ifl91/{z}/{x}/{y}.png');\n\t\n\t    var baseMaps = {\n\t      \"Base Map\": minimal\n\t      //\"Satellite\": satellite\n\t    };\n\t    this.features = new L.FeatureGroup([\n\t      //new L.Marker([39.0, -76.70]).bindPopup('Some organization'),\n\t      //new L.Marker([39.0, -76.20]).bindPopup('Abc company'),\n\t      //new L.Marker([38.9, -76.0]).bindPopup('Eastern shore company'),\n\t      //new L.Marker([38.36, -75.59]).bindPopup('Salisbury University')\n\t    ]);\n\t    this.geoJsonFeatures = L.geoJson();\n\t    this.clusterGroup = new L.MarkerClusterGroup(this.clusterOptions);\n\t\n\t    var overlayMaps = {\n\t      //'State': stateBoundary,\n\t      //'Counties': counties,\n\t      'Overlays': this.geoJsonFeatures\n\t\n\t    };\n\t    this.map = L.map(this.el, {\n\t      layers: [minimal, this.features, this.geoJsonFeatures, this.clusterGroup],\n\t      center: this.center || new L.LatLng(39.0, -76.70),\n\t      zoom: this.zoomLevel || 7,\n\t      scrollWheelZoom: this.scrollZoom || false\n\t    });\n\t\n\t    //copy layers to layer controls\n\t    if (typeof this.baseLayers != 'undefined') for (var i in this.baseLayers) {\n\t      var layer = this.baseLayers[i];\n\t      if (layer !== undefined) baseMaps[i] = layer;\n\t    }\n\t    var overlayMaps = {\n\t      //other overlay layers go here\n\t      //feature layer\n\t      //'Features': this.features,\n\t      'Overlays': this.geoJsonFeatures\n\t    };\n\t    if (typeof this.overlays != 'undefined') {\n\t      for (var i in this.overlays) {\n\t        var layer = this.overlays[i];\n\t        overlayMaps[i] = layer;\n\t      }\n\t    }\n\t    //L.control.layers(baseMaps, overlayMaps).addTo(this.map);\n\t    //L.control.scale().addTo(this.map);\n\t  },\n\t  getGeoJsonGroup: function getGeoJsonGroup() {\n\t    return this.geoJsonFeatures;\n\t  },\n\t  getFeatureGroup: function getFeatureGroup() {\n\t    return this.features;\n\t  },\n\t  addGeoJsonLayer: function addGeoJsonLayer(data, option) {\n\t    if (typeof data == 'undefined') {\n\t      console.log('No data found');\n\t      return;\n\t    }\n\t    console.log('Adding data to map...');\n\t    //console.log(data);\n\t    if (this.geoJsonFeatures != 'undefined') {\n\t      if (typeof option == 'undefined') this.geoJsonFeatures.addLayer(L.geoJson(data));else this.geoJsonFeatures.addLayer(L.geoJson(data, option));\n\t    }\n\t    console.log('------Data added to map');\n\t  },\n\t  clearGeoJsonFeatures: function clearGeoJsonFeatures() {\n\t    if (this.geoJsonFeatures != 'undefined') this.geoJsonFeatures.clearLayers();\n\t  },\n\t  addFeatureToFeatureGroup: function addFeatureToFeatureGroup(feature) {\n\t    var features = this.features;\n\t    if (typeof features == 'undefined') {\n\t      console.log('No feature group found');\n\t      return;\n\t    }\n\t    if (feature != null) features.addLayer(feature);\n\t  },\n\t  clearFeatures: function clearFeatures() {\n\t    var features = this.features;\n\t    if (typeof features == 'undefined') {\n\t      console.log('No feature group found');\n\t      return;\n\t    }\n\t    features.clearLayers();\n\t  },\n\t  createFeature: function createFeature(obj) {\n\t    var wkt = new Wkt.Wkt();\n\t    wkt.read(obj);\n\t    var f = wkt.toObject();\n\t    return f;\n\t  },\n\t  createMarker: function createMarker(lat, lng, options) {\n\t    return L.marker(L.latLng(lat, lng), options);\n\t  },\n\t  addClusterMarker: function addClusterMarker(marker) {\n\t    if (typeof this.clusterGroup == 'undefined') return;\n\t    this.clusterGroup.addLayer(marker);\n\t  },\n\t  clearClusterMarkers: function clearClusterMarkers() {\n\t    this.clusterGroup.clearLayers();\n\t  },\n\t  getClusterGroup: function getClusterGroup() {\n\t    return this.clusterGroup;\n\t  },\n\t  getFeaturesBound: function getFeaturesBound() {\n\t    var features = this.features;\n\t    if (typeof features == 'undefined') {\n\t      console.log('No feature group found');\n\t      return;\n\t    }\n\t    return features.getBounds();\n\t  },\n\t  getGeoJsonFeaturesBound: function getGeoJsonFeaturesBound() {\n\t    var features = this.geoJsonFeatures;\n\t    if (typeof features == 'undefined') {\n\t      console.log('No geojson feature found');\n\t      return;\n\t    }\n\t    return features.getBounds();\n\t  },\n\t  zoomToFeatures: function zoomToFeatures() {\n\t    var bounds = this.getFeaturesBound();\n\t    if (typeof bounds != 'undefined') this.map.fitBounds(bounds);\n\t  },\n\t  zoomToGeoJsonFeatures: function zoomToGeoJsonFeatures() {\n\t    var bounds = this.getGeoJsonFeaturesBound();\n\t    if (typeof bounds != 'undefined') this.map.fitBounds(bounds);\n\t  },\n\t  zoomToPoint: function zoomToPoint(point, zoom) {\n\t    var z = zoom || this.map.getMaxZoom(); //default zoom\n\t    if (typeof point.x != 'undefined' && typeof point.y != 'undefined') {\n\t      var latlng = new L.LatLng(point.y, point.x);\n\t      this.map.setView(latlng, z);\n\t    } else {\n\t      this.map.setView(point, z);\n\t    }\n\t  },\n\t  pointInPolygon: function pointInPolygon(point, vs) {\n\t    // ray-casting algorithm based on\n\t    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\t\n\t    var x = point[0],\n\t        y = point[1];\n\t\n\t    var inside = false;\n\t    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n\t      var xi = vs[i][0],\n\t          yi = vs[i][1];\n\t      var xj = vs[j][0],\n\t          yj = vs[j][1];\n\t\n\t      var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n\t      if (intersect) inside = !inside;\n\t    }\n\t\n\t    return inside;\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = LeafletViewer;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tAuthor: Tu hoang\r\n\tESRGC\r\n\tProvides base (prototype) functions for mapviewer\r\n\t\r\n\tThis class implement leaflet API\r\n\t*/\n\t\n\tvar Class = __webpack_require__(1);\n\t\n\tvar MapViewer = Class.define({\n\t    name: 'MapViewer',\n\t    _className: 'MapViewer',\n\t    initialize: function initialize(options) {\n\t        Class.copy(this, options); //copy all options to this class\n\t    },\n\t    zoomToExtent: function zoomToExtent(extent) {\n\t        this.map.fitBounds(new L.LatLngBounds(new L.LatLng(extent.xmin, extent.ymin), new L.LatLng(extent.xmax, extent.ymax)));\n\t    },\n\t    zoomToFullExtent: function zoomToFullExtent() {},\n\t    //zoom to xy (if level exists then zoom to that level otherwise maxlevel is used)\n\t    zoomToXY: function zoomToXY(x, y, level) {\n\t        if (typeof level == 'undefined') this.map.setView(new L.LatLng(y, x), this.map.getMaxZoom());else this.map.setView(new L.LatLng(y, x), level);\n\t    },\n\t    zoomIn: function zoomIn() {\n\t        this.map.zoomIn();\n\t    },\n\t    zoomOut: function zoomOut() {\n\t        this.map.zoomOut();\n\t    },\n\t    zoomToDataExtent: function zoomToDataExtent(layer) {\n\t        this.map.fitBounds(layer.getBounds());\n\t    },\n\t    panTo: function panTo(x, y) {\n\t        this.map.panTo(new L.LatLng(y, x));\n\t    },\n\t    locate: function locate() {\n\t        this.map.locateAndSetView(this.map.getMaxZoom() - 2);\n\t    }\n\t\n\t});\n\t\n\tmodule.exports = MapViewer;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\r\n\tAuthor: Tu Hoang\r\n\tESRGC2017\r\n\t\r\n\tView Map\r\n\tbase map view using backbone.js\r\n\telement: '.map'\r\n\trender basic map for dashboards\r\n\t\r\n\tRequires leaflet.js\r\n\t\r\n\tEvents \r\n\tonMapLoaded --fired when map is done initialized\r\n\tonLayerChanged -- fired when new data is loaded to geojson\r\n\tonGeomSelected -- fired when mouse clicked layer (geometry)\r\n\tonFeatureMouseover -- fired when mouse is over a layer (geometry)\r\n\tonFeatureMouseout -- fired when mouse is out of a layer (geometry)\r\n\t\r\n\tsetMapClickMode -- set selection mode (single or multi)\r\n\t*/\n\tvar LeafletViewer = __webpack_require__(7);\n\t\n\tvar map = Backbone.View.extend({\n\t  name: 'base-map',\n\t  el: '.map',\n\t  type: 'map',\n\t  mapControlsTemplate: '#map-control-tpl',\n\t  mapData: [\n\t    //defined in sub-classes\n\t    // For example\n\t    // {\n\t    //   name: 'Region',\n\t    //   type: 'layer',\n\t    //   label: '',\n\t    //   url: 'data/mdRegion.geojson',\n\t    //   nameField: 'Regions',\n\t    //   style: {\n\t    //     fill: true,\n\t    //     weight: 1,\n\t    //     fillOpacity: 0.1,\n\t    //     fillColor: '#2163B5',\n\t    //     color: '#000'\n\t    //   },\n\t    //   selected: true\n\t    // }\n\t  ], //specified geojson layers (in sub views)\n\t  mapDataLoaded: false,\n\t  selectedLayer: 'County', //geometry type \"County\" or \"Region\"\n\t  selectedFeature: null,\n\t  selectedFeatureName: '',\n\t  selectedLayers: [],\n\t  singleSelect: false,\n\t  mapParams: {\n\t    areatype: '01',\n\t    areacode: '0'\n\t  },\n\t  showMarkers: true,\n\t  clusterMarkerCache: [],\n\t  initialize: function initialize() {\n\t    //this.render();\n\t  },\n\t  render: function render(options) {\n\t    this.makeMap(); //set up map\n\t    this.loadMapData(options); //load geometry       \n\t    this.renderControls(); //render layer controls\n\t    console.log(this.name + ' view has been rendered..');\n\t  },\n\t  makeMap: function makeMap() {\n\t    this.mapViewer = new LeafletViewer({\n\t      el: this.el,\n\t      center: new L.LatLng(38.3607, -75.5994), //salisbury coordinates\n\t      zoomLevel: 10,\n\t      scrollZoom: true,\n\t      clusterOptions: {\n\t        showCoverageOnHover: false,\n\t        spiderfyOnMaxZoom: true,\n\t        maxClusterRadius: 40,\n\t        iconCreateFunction: function iconCreateFunction(cluster) {\n\t          var childCount = cluster.getChildCount();\n\t          var c = ' marker-cluster-';\n\t          if (childCount <= 5) {\n\t            c += 'small';\n\t          } else if (childCount <= 10) {\n\t            c += 'medium';\n\t          } else {\n\t            c += 'large';\n\t          }\n\t\n\t          return new L.DivIcon({\n\t            html: '<div><span>' + childCount + '</span></div>',\n\t            className: 'marker-cluster' + c,\n\t            iconSize: new L.Point(40, 40)\n\t          });\n\t        }\n\t      }\n\t    });\n\t  },\n\t  loadMapData: function loadMapData(options) {\n\t    var scope = this;\n\t    //use backbone model to load layer data\n\t    var model = new Backbone.Model();\n\t    var mapData = this.mapData;\n\t    var counter = 0;\n\t    var loadData = function loadData(layer) {\n\t      if (typeof layer == 'undefined') {\n\t        if (typeof scope.onMapLoaded == 'function') {\n\t          scope.onMapLoaded();\n\t        }\n\t        return;\n\t      }\n\t      if (layer.type == 'layer') {\n\t        model.url = layer.url;\n\t        model.fetch({\n\t          success: function success(data) {\n\t            console.log('loaded map data for ' + layer.name);\n\t            var newData = data.toJSON();\n\t            layer.data = newData;\n\t            //move to the next one\n\t            counter++;\n\t            if (counter < mapData.length) {\n\t              //load more if exists\n\t              loadData(mapData[counter]);\n\t            } else {\n\t\n\t              scope.mapDataLoaded = true;\n\t              //show the state layer by default\n\t              scope.showLayer(scope.selectedLayer, options);\n\t              // scope.updateCharts(); //initially load charts data\n\t\n\t              if (typeof scope.onMapLoaded == 'function') {\n\t                scope.onMapLoaded();\n\t              }\n\t            }\n\t          }\n\t        });\n\t      } else {\n\t        //if data is not a layer skip to the next one\n\t        counter++;\n\t        if (counter < mapData.length) {\n\t          //load more if exists\n\t          this.loadData(mapData[counter]);\n\t        } else {\n\t\n\t          scope.mapDataLoaded = true;\n\t          //show the state layer by default\n\t          scope.showLayer(scope.selectedLayer, options);\n\t          // scope.updateCharts(); //initially load charts data\n\t\n\t          if (typeof scope.onMapLoaded == 'function') {\n\t            scope.onMapLoaded();\n\t          }\n\t        }\n\t      }\n\t    };\n\t    loadData(mapData[counter]);\n\t  },\n\t  //clear geometry and add the layer that is being requested to show\n\t  showLayer: function showLayer(name, options) {\n\t    console.log(\"showing  layer \" + name);\n\t    var scope = this;\n\t    var setInitialAreaType = false;\n\t    var layer = this.getLayer(name);\n\t    if (typeof layer == 'undefined') return;\n\t    scope.selectedLayer = name;\n\t    scope.selectedFeatureName = '';\n\t    scope.selectedFeature = null;\n\t    scope.selectedLayers = [];\n\t    var title = scope.getGeomName();\n\t    scope.updateHoverText();\n\t    var mapViewer = this.mapViewer;\n\t    var newData = layer.data;\n\t    var nameField = layer.nameField; //name of the property that contains geom name\n\t\n\t    //determine layer styles (either a function returning style or a style object)\n\t    var layerStyle = layer.style;\n\t    var mouseoverStyle = {\n\t      fillOpacity: 0.2\n\t    };\n\t    var selectedStyle = layer.selectedStyle || {\n\t      //fillOpacity: 0.5\n\t      //dashArray: '',\n\t      opacity: 1,\n\t      color: '#FCFF00',\n\t      //color: '#E2E600',\n\t      weight: 4\n\t    };\n\t    console.log(options); //custom styles passed in options --this will bypass default style and styled specified in layer data\n\t    if (typeof options != 'undefined') {\n\t      if (options.style) layerStyle = options.style; //using function or style object\n\t      if (options.mouseoverStyle) mouseoverStyle = options.mouseoverStyle;\n\t      if (options.selectedStyle) selectedStyle = options.selectedStyle;\n\t    }\n\t\n\t    mapViewer.clearGeoJsonFeatures(); //clear old features\n\t    mapViewer.addGeoJsonLayer(newData, {\n\t      style: layerStyle,\n\t      //this call back handles mouse events on feature selection\n\t      onEachFeature: function onEachFeature(feature, layer) {\n\t\n\t        //set initial areatype once layer is loaded\n\t        if (!setInitialAreaType) {\n\t          setInitialAreaType = true;\n\t          scope.mapParams.areatype = feature.properties.areatype;\n\t        }\n\t        //console.log(feature);\n\t        layer.on('click', function (e) {\n\t          //console.log(e.target);\n\t          //clear style (selected)       \n\t          var layerGroup = mapViewer.getGeoJsonGroup();\n\t          //console.log(e.target);\n\t          //reset style for the whole layer group\n\t          _.each(layerGroup.getLayers(), function (layers) {\n\t            _.each(layers.getLayers(), function (l) {\n\t              layers.resetStyle(l);\n\t            });\n\t          });\n\t          //process selected feature\n\t          var l = e.target; //get selected feature\n\t          var index = null;\n\t          //check whether the layer is currently selected\n\t          for (var i = 0; i < scope.selectedLayers.length; i++) {\n\t            var layer = scope.selectedLayers[i];\n\t            if (l.feature.properties.areacode == layer.feature.properties.areacode) {\n\t              index = i;\n\t            }\n\t          }\n\t          //simulate toggle selection\n\t          if (index != null) {\n\t            scope.selectedLayers.splice(index, 1); //remove current layer from selected\n\t          } else {\n\t            if (scope.singleSelect == true) scope.selectedLayers = []; //reset selected layers when single select mode is on\n\t            // scope.selectedFeature = l;\n\t            scope.selectedLayers.push(l); //add selected layer to the collection\n\t          }\n\t\n\t          //set the last selected layer\n\t          if (scope.selectedLayers.length > 0) {\n\t            var sl = scope.selectedLayers[scope.selectedLayers.length - 1];\n\t            scope.selectedFeature = sl;\n\t            scope.selectedFeatureName = sl.feature.properties.name || sl.feature.properties.region || sl.feature.properties[nameField] || ''; //store selected feature name                                     \n\t          } else scope.selectedFeature = null;\n\t\n\t          //map updates\n\t          var areatype = null,\n\t              areacodes = [],\n\t              params;\n\t\n\t          //re-hilight the selected features\n\t          _.each(scope.selectedLayers, function (sl) {\n\t            sl.setStyle(selectedStyle);\n\t            var props = sl.feature.properties;\n\t            //access properties to get area type and code            \n\t            if (typeof props.areatype != 'undefined' && typeof props.areacode != 'undefined') {\n\t              //get areatype\n\t              if (areatype == null) areatype = props.areatype; //only set once\n\t\n\t              //get area code\n\t              areacodes.push(props.areacode);\n\t            }\n\t          });\n\t          if (areacodes.length > 0) params = {\n\t            areatype: areatype,\n\t            areacode: areacodes.join(',')\n\t          };else params = {\n\t            areatype: areatype,\n\t            areacode: '0'\n\t          };\n\t          //update charts\n\t          // scope.updateCharts(params);\n\t          scope.mapParams = params;\n\t\n\t          //finally run geom selected call back \n\t          if (typeof scope.onGeomSelected == 'function') {\n\t            scope.onGeomSelected.call(scope, feature, scope.selectedLayers); //pass selected feature as an argument\n\t          }\n\t        });\n\t        layer.on('mouseover', function (e) {\n\t          //set selected style\n\t          var layer = e.target;\n\t          layer.setStyle(mouseoverStyle);\n\t\n\t          if (!L.Browser.ie && !L.Browser.opera) {\n\t            layer.bringToFront();\n\t          }\n\t\n\t          //show text on the hover box\n\t          var prop = e.target.feature.properties;\n\t          var area = prop.name || prop.region || prop[nameField] || '';\n\t          //settext\n\t          scope.$('#hoverOverlay').text(area);\n\t\n\t          if (typeof scope.onFeatureMouseover == 'function') scope.onFeatureMouseover(layer);\n\t        });\n\t        layer.on('mouseout', function (e) {\n\t          var layerGroup = mapViewer.getGeoJsonGroup();\n\t          //console.log(e.target);\n\t          //reset style for current target\n\t          _.each(layerGroup.getLayers(), function (l) {\n\t            l.resetStyle(e.target);\n\t          });\n\t\n\t          //re-hilight the selected features\n\t          _.each(scope.selectedLayers, function (l) {\n\t            l.setStyle(selectedStyle);\n\t          });\n\t          //show text on the hover box\n\t          scope.updateHoverText();\n\t          if (typeof scope.onFeatureMouseout == 'function') scope.onFeatureMouseout(layer);\n\t        });\n\t      }\n\t    });\n\t  },\n\t  getLayer: function getLayer(name) {\n\t    for (var i in this.mapData) {\n\t      var layer = this.mapData[i];\n\t\n\t      if (layer.name == name) return layer;\n\t    }\n\t  },\n\t  renderControls: function renderControls() {\n\t    var scope = this;\n\t    var data = this.mapData;\n\t    // console.log(data);\n\t    var template = Handlebars.compile($(this.mapControlsTemplate).html());\n\t    var html = template({\n\t      models: data\n\t    });\n\t    this.$('div.leaflet-bottom.leaflet-left').html(html);\n\t    //wire layer controls events\n\t    this.$('.overlays div.layers').on('click', function (e) {\n\t      scope.mapControlClick.call(scope, e); //call callback in this view context\n\t    });\n\t    //hover box\n\t    this.$('div.leaflet-top.leaflet-right').append('<div id=\"hoverOverlay\" class=\"layerToggle\" style=\"display: block;\"></div>');\n\t    //zoom to extent - insert the zoom to extent button to the 2 zoom in/out buttons\n\t    this.$('div.leaflet-top.leaflet-left .leaflet-control-zoom-in').after([' <a class=\"leaflet-control-zoom-out\" id=\"zoomToExtent\"', ' href=\"#\" title=\"Zoom to Full-extent\">', '<i class=\"fa fa-globe\"></i>', '</a>'].join(''));\n\t    //zoom to extent button\n\t    this.$('#zoomToExtent').on('click', function (e) {\n\t      scope.mapViewer.zoomToGeoJsonFeatures(); //zoom to extent of current geojson layer\n\t      return false;\n\t    });\n\t  },\n\t  mapControlClick: function mapControlClick(e) {\n\t    var c = e.currentTarget;\n\t    var name = $(c).attr('data-name');\n\t    console.log('map layer ' + name + ' control clicked');\n\t    //show layer on the map\n\t    this.showLayer(name);\n\t    //add/remove check sign\n\t    this.$(c).parent().find('i[role=\"checkbox\"]').remove();\n\t    $(c).find('p').append('<i class=\"fa fa-check\" role=\"checkbox\"></i>');\n\t    // this.updateCharts(); //load defaults.\n\t    if (typeof this.onLayerChanged == 'function') this.onLayerChanged.call(this, name);\n\t  },\n\t  getGeomName: function getGeomName() {\n\t    var title = '';\n\t    if (this.selectedLayers.length > 1) {\n\t      title = 'Multi Areas';\n\t    } else if (this.selectedFeature == null) title = 'Statewide';else title = this.selectedLayer + ' ' + this.selectedFeatureName;\n\t    return title;\n\t\n\t    // switch (this.selectedLayer) {\n\t    //   case 'State':\n\t    //     title = 'Statewide'\n\t    //     break;\n\t    //   case 'County':\n\t    //     if (this.selectedLayers.length > 1) {\n\t    //       title = 'Multi counties';\n\t    //       break;\n\t    //     }\n\t    //     if (this.selectedFeature == null)\n\t    //       title = 'All counties';\n\t    //     else\n\t    //       title = 'County: ' + this.selectedFeatureName;\n\t    //     break;\n\t    //   case 'Region':\n\t    //   case 'WIA':\n\t    //     if (this.selectedLayers.length > 1) {\n\t    //       title = 'Multi areas';\n\t    //       break;\n\t    //     }\n\t    //     if (this.selectedFeature == null)\n\t    //       title = 'All areas';\n\t    //     else\n\t    //       title = 'Area: ' + this.selectedFeatureName;\n\t    //     break;\n\t    //   case 'Zip':\n\t    //     if (this.selectedFeature == null)\n\t    //       title = 'All zips';\n\t    //     else\n\t    //       title = 'Zip: ' + this.selectedFeatureName;\n\t    //     break;\n\t    // }\n\t    return title;\n\t  },\n\t  updateHoverText: function updateHoverText() {\n\t    var title = this.getGeomName();\n\t    //show text on the hover box\n\t    this.$('#hoverOverlay').text(title);\n\t  },\n\t  getCurrentParams: function getCurrentParams() {\n\t    var scope = this,\n\t        areatype = null,\n\t        areacodes = [];\n\t\n\t    _.each(scope.selectedLayers, function (sl) {\n\t      var props = sl.feature.properties;\n\t      //access properties to get area type and code            \n\t      if (typeof props.areatype != 'undefined' && typeof props.areacode != 'undefined') {\n\t        //get areatype\n\t        if (areatype == null) areatype = props.areatype; //only set once\n\t\n\t        //get area code\n\t        areacodes.push(props.areacode);\n\t      }\n\t    });\n\t    if (areacodes.length > 0) return {\n\t      areatype: areatype,\n\t      areacode: areacodes.join(',')\n\t    };else return {\n\t      areatype: areatype,\n\t      areacode: '0'\n\t    };\n\t  },\n\t  //select geometry by name\n\t  selectGeom: function selectGeom(featureNames, selectStyle) {\n\t    var scope = this;\n\t    var mapViewer = this.mapViewer;\n\t    var geoJsonGrp = mapViewer.getGeoJsonGroup();\n\t\n\t    var style = selectStyle || {\n\t      fillOpacity: .5\n\t    };\n\t\n\t    _.each(featureNames, function (f) {\n\t      //loop through featureNames to find the selected geom\n\t      var feature = null;\n\t      //console.log(geoJsonGrp);\n\t      geoJsonGrp.getLayers()[0].eachLayer(function (layer) {\n\t        feature = layer.feature;\n\t        if (typeof feature != 'undefined') {\n\t          //console.log(feature);\n\t          if (feature.properties.name.toLowerCase() == f.toLowerCase()) {\n\t            //found the feature, now select it\n\t            layer.setStyle(style);\n\t            //keep up with last selected feature\n\t            scope.selectedFeature = layer;\n\t            scope.selectedFeatureName = f;\n\t            scope.selectedLayers.push(layer);\n\t          }\n\t        }\n\t      });\n\t      //show text on the hover box\n\t      scope.updateHoverText();\n\t      //select fetures with the attributes specified..to be implemented\n\t      if (typeof this.onGeomSelected == 'function') this.onGeomSelected.call(this, feature);\n\t    });\n\t  },\n\t  addClusterMarkers: function addClusterMarkers(data, popupTemplate) {\n\t    var mapViewer = this.mapViewer;\n\t    mapViewer.clearClusterMarkers(); //clear current clustermakers\n\t    if (typeof data == 'undefined') data = this.clusterMarkerCache;else this.clusterMarkerCache = data;\n\t\n\t    if (data.length == 0) {\n\t      console.log('Can not add cluster markers. Data is empty.');\n\t      return;\n\t    }\n\t    //check switch value\n\t    if (!this.showMarkers) return;\n\t\n\t    //add new cluster markers\n\t    _.each(data, function (d) {\n\t      var m = mapViewer.createMarker(d.y_coord, d.x_coord, {});\n\t      m.bindPopup(d.template, {});\n\t      mapViewer.addClusterMarker(m);\n\t    });\n\t  },\n\t  clearClusterMarkers: function clearClusterMarkers() {\n\t    var mapViewer = this.mapViewer;\n\t    mapViewer.clearClusterMarkers(); //clear current clustermakers\n\t  },\n\t  setShowMarkers: function setShowMarkers(value) {\n\t    this.showMarkers = value;\n\t    if (!value) this.clearClusterMarkers();else this.addClusterMarkers(); //passing no param to add the cached marker data\n\t  },\n\t  zoomToLocation: function zoomToLocation(lon, lat, level) {\n\t    var lvl = level || 14;\n\t    this.mapViewer.zoomToPoint({\n\t      x: lon,\n\t      y: lat\n\t    }, lvl);\n\t  },\n\t  setMapClickMode: function setMapClickMode(mode) {\n\t    if (mode == 'single') this.singleSelect = true;else if (mode == 'multi') this.singleSelect = false;else {\n\t      if (this.singleSelect) console.log('Map click mode is: Single selection');else console.log('Map click mode is: Multi selection');\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = map;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// eventIndex-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59ad49ab73e631f00e49","/*\r\nTu Hoang\t\r\nESRGC2017\r\n\r\nmap view package\r\n\r\n*/\r\n\r\nvar MainRouter = require('./router/main.js');\r\n\r\n$(() => {\r\n  var router = new MainRouter();\r\n  //finally starts backbone history;\r\n  Backbone.history.start();\r\n  console.log('App initiated...')\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/event/index/index.js","/*\r\nTu Hoang\r\nESRGC\r\n2014\r\n\r\nclass.js\r\nutility functions that implements OOP\r\n*/\r\n\r\n/*\r\nfunction that defines a new class by passing a new\r\nprototype object (literal) as parameter. New classes\r\ncan extend/inherit from other classes by passing the \r\ninherit class name to extend property of the new class \r\nprototype object\r\n\r\nExample:\r\nvar newClass = dx.define({\r\nextend: OtherClass,\r\ninitialize: function(options){\r\n};\r\n});\r\n*/\r\nvar define = function(child) {\r\n  var ch = child;\r\n  var p = ch.extend;\r\n  var _class_ = null;\r\n  if (p == null || typeof p == 'undefined') {\r\n    _class_ = function() {\r\n      if (typeof this.initialize != 'undefined')\r\n        this.initialize.apply(this, arguments);\r\n    };\r\n    _class_.prototype = ch;\r\n  } else {\r\n    _class_ = function() {\r\n      var init = typeof this.initialize == 'function' ? this.initialize : 'undefined';\r\n      //run child initialize function if exists\r\n      if (typeof init == 'function') {\r\n        init.apply(this, arguments);\r\n      }\r\n    };\r\n    extend(_class_, p); //inherit prototype\r\n    copy(_class_.prototype, ch); //augment prototype\r\n  }\r\n  return _class_;\r\n};\r\n/*\r\nDeep copy object prototype by new keyword.\r\nThis method creates a new prototype object, whose prototype \r\nis a copy of the parent's prototype, and assign it to the child prototype.\r\nFinally, sets the child's prototype constructor to the child's constructor\r\n*/\r\nvar extend = function(child, parent) {\r\n  var F = function() {};\r\n  F.prototype = parent.prototype;\r\n  child.prototype = new F();\r\n  child.prototype.constructor = child;\r\n  child.parent = parent.prototype;\r\n};\r\n//copy object properties\r\nvar copy = function(dest, source) {\r\n  dest = dest || {};\r\n  if (source) {\r\n    for (var property in source) {\r\n      var value = source[property];\r\n      if (value !== undefined) {\r\n        dest[property] = value;\r\n      }\r\n    }\r\n    /**\r\n     * IE doesn't include the toString property when iterating over an object's\r\n     * properties with the for(property in object) syntax.  Explicitly check if\r\n     * the source has its own toString property.\r\n     */\r\n    /*\r\n     * FF/Windows < 2.0.0.13 reports \"Illegal operation on WrappedNative\r\n     * prototype object\" when calling hawOwnProperty if the source object\r\n     * is an instance of window.Event.\r\n     */\r\n\r\n    var sourceIsEvt = typeof window.Event == \"function\" && source instanceof window.Event;\r\n\r\n    if (!sourceIsEvt &&\r\n      source.hasOwnProperty && source.hasOwnProperty(\"toString\")) {\r\n      dest.toString = source.toString;\r\n    }\r\n  }\r\n  return dest;\r\n};\r\n\r\nmodule.exports = {\r\n  define: define,\r\n  extend: extend,\r\n  copy: copy\r\n};\n\n\n// WEBPACK FOOTER //\n// ./public/js/util/class.js","/*\r\nTu Hoang\r\nMarch 2017\r\n\r\nController class that handles map and calendar view \r\n\r\nES6 rocks\r\n*/\r\nvar MapView = require('../view/map.js');\r\nvar CalendarView = require('../view/calendar');\r\n\r\n\r\nclass mainController {\r\n  constructor() {\r\n      //views\r\n      this._mapView = new MapView();\r\n      this._calendarView = new CalendarView();\r\n    }\r\n    //initialize view components \r\n  initialize() {\r\n    console.log('Initializing...');\r\n    var scope = this;\r\n    //render map\r\n    scope._mapView.render();\r\n    //wire event callback for calendar\r\n    scope._calendarView.onEventsLoaded = (eventData, view) => {\r\n      console.log(`this event is called from controller!`);\r\n      console.log(eventData);\r\n      let group = _.groupBy(eventData, (v)=>{return v.id;});\r\n      let data = _.map(group, (v, index) => {\r\n        let value = v[0];//only take the first element\r\n        let start = value.start.local().format('dddd, MMMM Do YYYY, h:mm:ss a');\r\n        let end = value.end != null ?\r\n          value.end.local().format('dddd, MMMM Do YYYY, h: mm: ss a') : '';\r\n        return {\r\n          id: value._id,\r\n          x_coord: value.location.x,\r\n          y_coord: value.location.y,\r\n          template: `\r\n      \t\t\t<h4>\r\n              <strong>${value.title}</strong>\r\n              <small>\r\n                <a href=\"edit?id=${value._id}\"><i class=\"fa fa-pencil\"></i></a>\r\n              </small>\r\n            </h4>\r\n      \t\t\t<p>\r\n      \t\t\t\t<strong>Start</strong>: ${start} <br/>\r\n      \t\t\t\t<strong>End</strong>: ${end} <br/>\r\n      \t\t\t\t<strong>Description</strong>: ${value.description} <br/>\r\n      \t\t\t\t<strong>Location</strong>: ${value.address} ${value.city}, ${value.state} ${value.zip}\r\n      \t\t\t</p>\r\n      \t\t`\r\n        };\r\n      });\r\n\r\n      \r\n      // console.log(g);\r\n\r\n      scope._mapView.addClusterMarkers(data);\r\n\r\n    };\r\n\r\n    scope._calendarView.onEventClick = (event, jsEvent, view) => {\r\n    \t\r\n    \tvar location = event.location;\r\n      if (typeof location == 'undefined')\r\n        return;\r\n      scope._mapView.zoomToLocation(location.x, location.y);\r\n    };\r\n    scope._calendarView.onEventMouseOver = (event, jsEvent, view) => {\r\n      //for editing\r\n    };\r\n\r\n    //render calendar\r\n    scope._calendarView.render();\r\n  }\r\n\r\n  get mapView() {\r\n    return this._mapView;\r\n  }\r\n\r\n  get calendarView() {\r\n    return this._calendarView;\r\n  }\r\n\r\n  zoomToLocation(x, y) {\r\n    this._mapView.zoomToLocation(x, y, 16);\r\n  }\r\n}\r\n\r\nmodule.exports = mainController;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/event/index/controller/main.js","/*\r\nTu Hoang\r\nMarch 2017\r\n\r\nmain router for event/index page\r\n*/\r\n\r\n// var MapView = require('../view/map.js');\r\n// var CalendarView = require('../view/calendar');\r\n\r\n// //views\r\n// var mapView = new MapView();\r\n// var calendarView = new CalendarView();\r\n\r\nvar MainController = require('../controller/main');\r\nvar controller = new MainController();\r\n\r\n//router definition\r\nvar mainRouter = Backbone.Router.extend({\r\n  name: 'EventIndex',\r\n  routes: {\r\n    '': 'init',\r\n    ':x/:y': 'initZoom'\r\n  },\r\n  init: () => {\r\n    //initialize components\r\n    controller.initialize();\r\n\r\n    //return controller;\r\n  },\r\n  initZoom: (x, y) => {\r\n    this.init();\r\n    controller.zoomToLocation(x, y);\r\n  }\r\n});\r\n\r\nmodule.exports = mainRouter;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/event/index/router/main.js","/*\r\nTu Hoang\r\nMarch 2017\r\n\r\nCalendar view\r\n\r\nevent callbacks: \r\nonEventClick(event, jsEvent, view)\r\nonEventsLoaded(eventData, view)\r\n\r\n*/\r\n\r\n\r\nvar Calendar = Backbone.View.extend({\r\n  name: 'CalendarView',\r\n  el: '#calendar-area',\r\n  render: function() {\r\n    var scope = this;\r\n    this.$('#calendar').fullCalendar({\r\n      //init full calendar \r\n      header: {\r\n        left: 'prev,next,today',\r\n        center: 'title',\r\n        right: 'month,agendaWeek,agendaDay,listMonth'\r\n      },\r\n      editable: false,\r\n      eventSources: [\r\n        //event feed\r\n        {\r\n          url: 'feed' // use the `url` property\r\n            // color: 'yellow', // an option!\r\n            // textColor: 'black' // an option!\r\n        }\r\n\r\n        // any other sources...\r\n\r\n      ],\r\n      eventLimit: true,\r\n      eventMouseover: (event, jsEvent, view) => {\r\n        //register call back and trigger here\r\n        if (typeof scope.onEventMouseOver == 'function')\r\n          scope.onEventMouseOver.call(scope, event, jsEvent, view);\r\n      },\r\n      eventClick: (event, jsEvent, view) => {\r\n        console.log(event);\r\n        //register call back and trigger here\r\n        if (typeof scope.onEventClick == 'function')\r\n          scope.onEventClick.call(scope, event, jsEvent, view);\r\n      },\r\n      loading: (isLoading, view) => {\r\n        if (!isLoading){\r\n          console.log('done fetching event data!');\r\n          var eventData = $('#calendar').fullCalendar('clientEvents');\r\n          // console.log(eventData);\r\n          if(typeof scope.onEventsLoaded == 'function'){\r\n          \tscope.onEventsLoaded.call(scope, eventData, view);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n});\r\n\r\nmodule.exports = Calendar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/event/index/view/calendar.js","/*\r\nAuthor: Tu Hoang\r\nESRGC2017\r\n\r\nView Map\r\n\r\n\r\nRequires leaflet.js\r\n\r\nEvents \r\nonMapLoaded --fired when map is done initialized\r\nonLayerChanged -- fired when new data is loaded to geojson\r\nonGeomSelected -- fired when mouse clicked layer (geometry)\r\nonFeatureMouseover -- fired when mouse is over a layer (geometry)\r\nonFeatureMouseout -- fired when mouse is out of a layer (geometry)\r\n\r\nsetMapClickMode -- set selection mode (single or multi)\r\n*/\r\nvar BaseMap = require('../../../shared/view/map.js');\r\n\r\nvar map = BaseMap.extend({\r\n  name: 'unite-map',\r\n  el: '.map',\r\n  mapData: [\r\n\r\n  ], //specified geojson layers (in sub views)\r\n  render: function() {\r\n    var scope = this;\r\n    scope.makeMap(); //set up map\r\n    if (typeof scope.onMapLoaded == 'function') {\r\n      scope.onMapLoaded();\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = map;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/event/index/view/map.js","/*\r\nAuthor: Tu hoang\r\nESRGC\r\nProvides base (prototype) functions for mapviewer\r\nNote: this class is defined using dx library\r\n\r\nimplements leaflet API\r\noperates foodshed application\r\n*/\r\nvar Class = require('../util/class');\r\nvar MapViewer = require('./mapViewer');\r\n\r\nvar LeafletViewer = Class.define({\r\n  name: 'LeafletViewer',\r\n  extend: MapViewer,\r\n  _className: 'LeafletViewer',\r\n  initialize: function(options) {\r\n    MapViewer.prototype.initialize.apply(this, arguments);\r\n    //map setup\r\n    var minimal = L.tileLayer('https://{s}.tiles.mapbox.com/v3/esrgc.map-y9awf40v/{z}/{x}/{y}.png');\r\n    //var satellite = L.tileLayer('http://{s}.tiles.mapbox.com/v3/esrgc.map-0y6ifl91/{z}/{x}/{y}.png');\r\n\r\n    var baseMaps = {\r\n      \"Base Map\": minimal\r\n        //\"Satellite\": satellite\r\n    }\r\n    this.features = new L.FeatureGroup([\r\n      //new L.Marker([39.0, -76.70]).bindPopup('Some organization'),\r\n      //new L.Marker([39.0, -76.20]).bindPopup('Abc company'),\r\n      //new L.Marker([38.9, -76.0]).bindPopup('Eastern shore company'),\r\n      //new L.Marker([38.36, -75.59]).bindPopup('Salisbury University')\r\n    ]);\r\n    this.geoJsonFeatures = L.geoJson();\r\n    this.clusterGroup = new L.MarkerClusterGroup(this.clusterOptions);\r\n\r\n    var overlayMaps = {\r\n      //'State': stateBoundary,\r\n      //'Counties': counties,\r\n      'Overlays': this.geoJsonFeatures\r\n\r\n    }\r\n    this.map = L.map(this.el, {\r\n      layers: [\r\n        minimal,\r\n        this.features,\r\n        this.geoJsonFeatures,\r\n        this.clusterGroup\r\n      ],\r\n      center: this.center || new L.LatLng(39.0, -76.70),\r\n      zoom: this.zoomLevel || 7,\r\n      scrollWheelZoom: this.scrollZoom || false\r\n    });\r\n\r\n\r\n    //copy layers to layer controls\r\n    if (typeof this.baseLayers != 'undefined')\r\n      for (var i in this.baseLayers) {\r\n        var layer = this.baseLayers[i];\r\n        if (layer !== undefined)\r\n          baseMaps[i] = layer;\r\n      }\r\n    var overlayMaps = {\r\n      //other overlay layers go here\r\n      //feature layer\r\n      //'Features': this.features,\r\n      'Overlays': this.geoJsonFeatures\r\n    };\r\n    if (typeof this.overlays != 'undefined') {\r\n      for (var i in this.overlays) {\r\n        var layer = this.overlays[i];\r\n        overlayMaps[i] = layer;\r\n      }\r\n    }\r\n    //L.control.layers(baseMaps, overlayMaps).addTo(this.map);\r\n    //L.control.scale().addTo(this.map);\r\n  },\r\n  getGeoJsonGroup: function() {\r\n    return this.geoJsonFeatures;\r\n  },\r\n  getFeatureGroup: function() {\r\n    return this.features;\r\n  },\r\n  addGeoJsonLayer: function(data, option) {\r\n    if (typeof data == 'undefined') {\r\n      console.log('No data found')\r\n      return;\r\n    }\r\n    console.log('Adding data to map...');\r\n    //console.log(data);\r\n    if (this.geoJsonFeatures != 'undefined') {\r\n      if (typeof option == 'undefined')\r\n        this.geoJsonFeatures.addLayer(L.geoJson(data));\r\n      else\r\n        this.geoJsonFeatures.addLayer(L.geoJson(data, option));\r\n    }\r\n    console.log('------Data added to map');\r\n  },\r\n  clearGeoJsonFeatures: function() {\r\n    if (this.geoJsonFeatures != 'undefined')\r\n      this.geoJsonFeatures.clearLayers();\r\n  },\r\n  addFeatureToFeatureGroup: function(feature) {\r\n    var features = this.features;\r\n    if (typeof features == 'undefined') {\r\n      console.log('No feature group found');\r\n      return;\r\n    }\r\n    if (feature != null)\r\n      features.addLayer(feature);\r\n  },\r\n  clearFeatures: function() {\r\n    var features = this.features;\r\n    if (typeof features == 'undefined') {\r\n      console.log('No feature group found');\r\n      return;\r\n    }\r\n    features.clearLayers();\r\n  },\r\n  createFeature: function(obj) {\r\n    var wkt = new Wkt.Wkt();\r\n    wkt.read(obj);\r\n    var f = wkt.toObject();\r\n    return f;\r\n  },\r\n  createMarker: function(lat, lng, options) {\r\n    return L.marker(L.latLng(lat, lng), options);\r\n  },\r\n  addClusterMarker: function(marker) {\r\n    if (typeof this.clusterGroup == 'undefined')\r\n      return;\r\n    this.clusterGroup.addLayer(marker);\r\n  },\r\n  clearClusterMarkers: function() {\r\n    this.clusterGroup.clearLayers();\r\n  },\r\n  getClusterGroup: function(){\r\n    return this.clusterGroup;\r\n  },\r\n  getFeaturesBound: function() {\r\n    var features = this.features;\r\n    if (typeof features == 'undefined') {\r\n      console.log('No feature group found');\r\n      return;\r\n    }\r\n    return features.getBounds();\r\n  },\r\n  getGeoJsonFeaturesBound: function() {\r\n    var features = this.geoJsonFeatures;\r\n    if (typeof features == 'undefined') {\r\n      console.log('No geojson feature found');\r\n      return;\r\n    }\r\n    return features.getBounds();\r\n  },\r\n  zoomToFeatures: function() {\r\n    var bounds = this.getFeaturesBound();\r\n    if (typeof bounds != 'undefined')\r\n      this.map.fitBounds(bounds);\r\n  },\r\n  zoomToGeoJsonFeatures: function() {\r\n    var bounds = this.getGeoJsonFeaturesBound();\r\n    if (typeof bounds != 'undefined')\r\n      this.map.fitBounds(bounds);\r\n  },\r\n  zoomToPoint: function(point, zoom) {\r\n    var z = zoom || this.map.getMaxZoom(); //default zoom\r\n    if (typeof point.x != 'undefined' && typeof point.y != 'undefined') {\r\n      var latlng = new L.LatLng(point.y, point.x);\r\n      this.map.setView(latlng, z);\r\n    } else {\r\n      this.map.setView(point, z);\r\n    }\r\n  },\r\n  pointInPolygon: function(point, vs) {\r\n    // ray-casting algorithm based on\r\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n\r\n    var x = point[0],\r\n      y = point[1];\r\n\r\n    var inside = false;\r\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n      var xi = vs[i][0],\r\n        yi = vs[i][1];\r\n      var xj = vs[j][0],\r\n        yj = vs[j][1];\r\n\r\n      var intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n      if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n\r\n});\r\n\r\nmodule.exports = LeafletViewer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/map/leafletViewer.js","/*\r\nAuthor: Tu hoang\r\nESRGC\r\nProvides base (prototype) functions for mapviewer\r\n\r\nThis class implement leaflet API\r\n*/\r\n\r\nvar Class = require('../util/class');\r\n\r\nvar MapViewer = Class.define({\r\n    name: 'MapViewer',\r\n    _className: 'MapViewer',\r\n    initialize: function(options) {\r\n      Class.copy(this, options);//copy all options to this class\r\n    },\r\n    zoomToExtent: function(extent) {\r\n        this.map.fitBounds(new L.LatLngBounds(new L.LatLng(extent.xmin, extent.ymin),\r\n         new L.LatLng(extent.xmax, extent.ymax)));\r\n    },\r\n    zoomToFullExtent: function() {\r\n    },\r\n    //zoom to xy (if level exists then zoom to that level otherwise maxlevel is used)\r\n    zoomToXY: function(x, y, level) {\r\n        if (typeof level == 'undefined')\r\n            this.map.setView(new L.LatLng(y, x), this.map.getMaxZoom());\r\n        else\r\n            this.map.setView(new L.LatLng(y, x), level);\r\n    },\r\n    zoomIn: function() {\r\n        this.map.zoomIn();\r\n    },\r\n    zoomOut: function() {\r\n        this.map.zoomOut();\r\n    },\r\n    zoomToDataExtent: function(layer) {\r\n        this.map.fitBounds(layer.getBounds());\r\n    },\r\n    panTo: function(x, y) {\r\n        this.map.panTo(new L.LatLng(y, x));\r\n    },\r\n    locate: function() {\r\n        this.map.locateAndSetView(this.map.getMaxZoom() - 2);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = MapViewer;\n\n\n// WEBPACK FOOTER //\n// ./public/js/map/mapViewer.js","/*\r\nAuthor: Tu Hoang\r\nESRGC2017\r\n\r\nView Map\r\nbase map view using backbone.js\r\nelement: '.map'\r\nrender basic map for dashboards\r\n\r\nRequires leaflet.js\r\n\r\nEvents \r\nonMapLoaded --fired when map is done initialized\r\nonLayerChanged -- fired when new data is loaded to geojson\r\nonGeomSelected -- fired when mouse clicked layer (geometry)\r\nonFeatureMouseover -- fired when mouse is over a layer (geometry)\r\nonFeatureMouseout -- fired when mouse is out of a layer (geometry)\r\n\r\nsetMapClickMode -- set selection mode (single or multi)\r\n*/\r\nvar LeafletViewer = require('../../map/leafletViewer');\r\n\r\nvar map = Backbone.View.extend({\r\n  name: 'base-map',\r\n  el: '.map',\r\n  type: 'map',\r\n  mapControlsTemplate: '#map-control-tpl',\r\n  mapData: [\r\n    //defined in sub-classes\r\n    // For example\r\n    // {\r\n    //   name: 'Region',\r\n    //   type: 'layer',\r\n    //   label: '',\r\n    //   url: 'data/mdRegion.geojson',\r\n    //   nameField: 'Regions',\r\n    //   style: {\r\n    //     fill: true,\r\n    //     weight: 1,\r\n    //     fillOpacity: 0.1,\r\n    //     fillColor: '#2163B5',\r\n    //     color: '#000'\r\n    //   },\r\n    //   selected: true\r\n    // }\r\n  ], //specified geojson layers (in sub views)\r\n  mapDataLoaded: false,\r\n  selectedLayer: 'County', //geometry type \"County\" or \"Region\"\r\n  selectedFeature: null,\r\n  selectedFeatureName: '',\r\n  selectedLayers: [],\r\n  singleSelect: false,\r\n  mapParams: {\r\n    areatype: '01',\r\n    areacode: '0'\r\n  },\r\n  showMarkers: true,\r\n  clusterMarkerCache: [],\r\n  initialize: function() {\r\n    //this.render();\r\n  },\r\n  render: function(options) {\r\n    this.makeMap(); //set up map\r\n    this.loadMapData(options); //load geometry       \r\n    this.renderControls(); //render layer controls\r\n    console.log(this.name + ' view has been rendered..')\r\n  },\r\n  makeMap: function() {\r\n    this.mapViewer = new LeafletViewer({\r\n      el: this.el,\r\n      center: new L.LatLng( 38.3607, -75.5994 ), //salisbury coordinates\r\n      zoomLevel: 10,\r\n      scrollZoom: true,\r\n      clusterOptions: {\r\n        showCoverageOnHover: false,\r\n        spiderfyOnMaxZoom: true,\r\n        maxClusterRadius: 40,\r\n        iconCreateFunction: function(cluster) {\r\n          var childCount = cluster.getChildCount();\r\n          var c = ' marker-cluster-';\r\n          if (childCount <= 5) {\r\n            c += 'small';\r\n          } else if (childCount <= 10) {\r\n            c += 'medium';\r\n          } else {\r\n            c += 'large';\r\n          }\r\n\r\n          return new L.DivIcon({\r\n            html: '<div><span>' + childCount + '</span></div>',\r\n            className: 'marker-cluster' + c,\r\n            iconSize: new L.Point(40, 40)\r\n          });\r\n        }\r\n      }\r\n    });\r\n  },\r\n  loadMapData: function(options) {\r\n    var scope = this;\r\n    //use backbone model to load layer data\r\n    var model = new Backbone.Model();\r\n    var mapData = this.mapData;\r\n    var counter = 0;\r\n    var loadData = function(layer) {\r\n      if (typeof layer == 'undefined'){\r\n        if (typeof scope.onMapLoaded == 'function') {\r\n          scope.onMapLoaded();\r\n        }\r\n        return;\r\n      }\r\n      if (layer.type == 'layer') {\r\n        model.url = layer.url;\r\n        model.fetch({\r\n          success: function(data) {\r\n            console.log('loaded map data for ' + layer.name);\r\n            var newData = data.toJSON();\r\n            layer.data = newData;\r\n            //move to the next one\r\n            counter++;\r\n            if (counter < mapData.length) { //load more if exists\r\n              loadData(mapData[counter]);\r\n            } else {\r\n\r\n              scope.mapDataLoaded = true;\r\n              //show the state layer by default\r\n              scope.showLayer(scope.selectedLayer, options);\r\n              // scope.updateCharts(); //initially load charts data\r\n\r\n              if (typeof scope.onMapLoaded == 'function') {\r\n                scope.onMapLoaded();\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else { //if data is not a layer skip to the next one\r\n        counter++;\r\n        if (counter < mapData.length) { //load more if exists\r\n          this.loadData(mapData[counter]);\r\n        } else {\r\n\r\n          scope.mapDataLoaded = true;\r\n          //show the state layer by default\r\n          scope.showLayer(scope.selectedLayer, options);\r\n          // scope.updateCharts(); //initially load charts data\r\n\r\n          if (typeof scope.onMapLoaded == 'function') {\r\n            scope.onMapLoaded();\r\n          }\r\n        }\r\n      }\r\n    };\r\n    loadData(mapData[counter]);\r\n  },\r\n  //clear geometry and add the layer that is being requested to show\r\n  showLayer: function(name, options) {\r\n    console.log(\"showing  layer \" + name);\r\n    var scope = this;\r\n    var setInitialAreaType = false;\r\n    var layer = this.getLayer(name);\r\n    if (typeof layer == 'undefined')\r\n      return;\r\n    scope.selectedLayer = name;\r\n    scope.selectedFeatureName = '';\r\n    scope.selectedFeature = null;\r\n    scope.selectedLayers = [];\r\n    var title = scope.getGeomName();\r\n    scope.updateHoverText();\r\n    var mapViewer = this.mapViewer;\r\n    var newData = layer.data;\r\n    var nameField = layer.nameField; //name of the property that contains geom name\r\n\r\n    //determine layer styles (either a function returning style or a style object)\r\n    var layerStyle = layer.style;\r\n    var mouseoverStyle = {\r\n      fillOpacity: 0.2\r\n    };\r\n    var selectedStyle = layer.selectedStyle || {\r\n      //fillOpacity: 0.5\r\n      //dashArray: '',\r\n      opacity: 1,\r\n      color: '#FCFF00',\r\n      //color: '#E2E600',\r\n      weight: 4\r\n    };\r\n    console.log(options); //custom styles passed in options --this will bypass default style and styled specified in layer data\r\n    if (typeof options != 'undefined') {\r\n      if (options.style)\r\n        layerStyle = options.style; //using function or style object\r\n      if (options.mouseoverStyle)\r\n        mouseoverStyle = options.mouseoverStyle;\r\n      if (options.selectedStyle)\r\n        selectedStyle = options.selectedStyle;\r\n    }\r\n\r\n\r\n    mapViewer.clearGeoJsonFeatures(); //clear old features\r\n    mapViewer.addGeoJsonLayer(newData, {\r\n      style: layerStyle,\r\n      //this call back handles mouse events on feature selection\r\n      onEachFeature: function(feature, layer) {\r\n\r\n        //set initial areatype once layer is loaded\r\n        if (!setInitialAreaType) {\r\n          setInitialAreaType = true;\r\n          scope.mapParams.areatype = feature.properties.areatype;\r\n        }\r\n        //console.log(feature);\r\n        layer.on('click', function(e) {\r\n          //console.log(e.target);\r\n          //clear style (selected)       \r\n          var layerGroup = mapViewer.getGeoJsonGroup();\r\n          //console.log(e.target);\r\n          //reset style for the whole layer group\r\n          _.each(layerGroup.getLayers(), function(layers) {\r\n            _.each(layers.getLayers(), function(l) {\r\n              layers.resetStyle(l);\r\n            });\r\n          });\r\n          //process selected feature\r\n          var l = e.target; //get selected feature\r\n          var index = null;\r\n          //check whether the layer is currently selected\r\n          for (var i = 0; i < scope.selectedLayers.length; i++) {\r\n            var layer = scope.selectedLayers[i];\r\n            if (l.feature.properties.areacode == layer.feature.properties.areacode) {\r\n              index = i;\r\n            }\r\n          }\r\n          //simulate toggle selection\r\n          if (index != null) {\r\n            scope.selectedLayers.splice(index, 1); //remove current layer from selected\r\n          } else {\r\n            if (scope.singleSelect == true)\r\n              scope.selectedLayers = []; //reset selected layers when single select mode is on\r\n            // scope.selectedFeature = l;\r\n            scope.selectedLayers.push(l); //add selected layer to the collection\r\n          }\r\n\r\n          //set the last selected layer\r\n          if (scope.selectedLayers.length > 0) {\r\n            var sl = scope.selectedLayers[scope.selectedLayers.length - 1];\r\n            scope.selectedFeature = sl;\r\n            scope.selectedFeatureName = sl.feature.properties.name ||\r\n              sl.feature.properties.region ||\r\n              sl.feature.properties[nameField] || ''; //store selected feature name                                     \r\n          } else\r\n\r\n            scope.selectedFeature = null;\r\n\r\n          //map updates\r\n          var areatype = null,\r\n            areacodes = [],\r\n            params;\r\n\r\n          //re-hilight the selected features\r\n          _.each(scope.selectedLayers, function(sl) {\r\n            sl.setStyle(selectedStyle);\r\n            var props = sl.feature.properties;\r\n            //access properties to get area type and code            \r\n            if (typeof props.areatype != 'undefined' && typeof props.areacode != 'undefined') {\r\n              //get areatype\r\n              if (areatype == null)\r\n                areatype = props.areatype; //only set once\r\n\r\n              //get area code\r\n              areacodes.push(props.areacode);\r\n            }\r\n          });\r\n          if (areacodes.length > 0)\r\n            params = {\r\n              areatype: areatype,\r\n              areacode: areacodes.join(',')\r\n            };\r\n          else\r\n            params = {\r\n              areatype: areatype,\r\n              areacode: '0'\r\n            };\r\n          //update charts\r\n          // scope.updateCharts(params);\r\n          scope.mapParams = params;\r\n\r\n          //finally run geom selected call back \r\n          if (typeof scope.onGeomSelected == 'function') {\r\n            scope.onGeomSelected.call(scope, feature, scope.selectedLayers); //pass selected feature as an argument\r\n          }\r\n        });\r\n        layer.on('mouseover', function(e) {\r\n          //set selected style\r\n          var layer = e.target;\r\n          layer.setStyle(mouseoverStyle);\r\n\r\n          if (!L.Browser.ie && !L.Browser.opera) {\r\n            layer.bringToFront();\r\n          }\r\n\r\n          //show text on the hover box\r\n          var prop = e.target.feature.properties;\r\n          var area = prop.name || prop.region || prop[nameField] || '';\r\n          //settext\r\n          scope.$('#hoverOverlay').text(area)\r\n\r\n          if (typeof scope.onFeatureMouseover == 'function')\r\n            scope.onFeatureMouseover(layer);\r\n        });\r\n        layer.on('mouseout', function(e) {\r\n          var layerGroup = mapViewer.getGeoJsonGroup();\r\n          //console.log(e.target);\r\n          //reset style for current target\r\n          _.each(layerGroup.getLayers(), function(l) {\r\n            l.resetStyle(e.target);\r\n          });\r\n\r\n          //re-hilight the selected features\r\n          _.each(scope.selectedLayers, function(l) {\r\n            l.setStyle(selectedStyle);\r\n          });\r\n          //show text on the hover box\r\n          scope.updateHoverText();\r\n          if (typeof scope.onFeatureMouseout == 'function')\r\n            scope.onFeatureMouseout(layer);\r\n        });\r\n      }\r\n    });\r\n  },\r\n  getLayer: function(name) {\r\n    for (var i in this.mapData) {\r\n      var layer = this.mapData[i];\r\n\r\n      if (layer.name == name)\r\n        return layer;\r\n    }\r\n  },\r\n  renderControls: function() {\r\n    var scope = this;\r\n    var data = this.mapData;\r\n    // console.log(data);\r\n    var template = Handlebars.compile($(this.mapControlsTemplate).html());\r\n    var html = template({\r\n      models: data\r\n    });\r\n    this.$('div.leaflet-bottom.leaflet-left').html(html);\r\n    //wire layer controls events\r\n    this.$('.overlays div.layers').on('click', function(e) {\r\n      scope.mapControlClick.call(scope, e); //call callback in this view context\r\n    });\r\n    //hover box\r\n    this.$('div.leaflet-top.leaflet-right').append(\r\n      '<div id=\"hoverOverlay\" class=\"layerToggle\" style=\"display: block;\"></div>'\r\n    );\r\n    //zoom to extent - insert the zoom to extent button to the 2 zoom in/out buttons\r\n    this.$('div.leaflet-top.leaflet-left .leaflet-control-zoom-in').after([\r\n      ' <a class=\"leaflet-control-zoom-out\" id=\"zoomToExtent\"',\r\n      ' href=\"#\" title=\"Zoom to Full-extent\">',\r\n      '<i class=\"fa fa-globe\"></i>',\r\n      '</a>'\r\n    ].join(''));\r\n    //zoom to extent button\r\n    this.$('#zoomToExtent').on('click', function(e) {\r\n      scope.mapViewer.zoomToGeoJsonFeatures(); //zoom to extent of current geojson layer\r\n      return false;\r\n    });\r\n  },\r\n  mapControlClick: function(e) {\r\n    var c = e.currentTarget;\r\n    var name = $(c).attr('data-name');\r\n    console.log('map layer ' + name + ' control clicked');\r\n    //show layer on the map\r\n    this.showLayer(name);\r\n    //add/remove check sign\r\n    this.$(c).parent().find('i[role=\"checkbox\"]').remove();\r\n    $(c).find('p').append('<i class=\"fa fa-check\" role=\"checkbox\"></i>')\r\n      // this.updateCharts(); //load defaults.\r\n    if (typeof this.onLayerChanged == 'function')\r\n      this.onLayerChanged.call(this, name);\r\n  },\r\n  getGeomName: function() {\r\n    var title = '';\r\n    if (this.selectedLayers.length > 1) {\r\n      title = 'Multi Areas';\r\n    } else if (this.selectedFeature == null)\r\n      title = 'Statewide';\r\n    else\r\n      title = this.selectedLayer + ' ' + this.selectedFeatureName;\r\n    return title;\r\n\r\n    // switch (this.selectedLayer) {\r\n    //   case 'State':\r\n    //     title = 'Statewide'\r\n    //     break;\r\n    //   case 'County':\r\n    //     if (this.selectedLayers.length > 1) {\r\n    //       title = 'Multi counties';\r\n    //       break;\r\n    //     }\r\n    //     if (this.selectedFeature == null)\r\n    //       title = 'All counties';\r\n    //     else\r\n    //       title = 'County: ' + this.selectedFeatureName;\r\n    //     break;\r\n    //   case 'Region':\r\n    //   case 'WIA':\r\n    //     if (this.selectedLayers.length > 1) {\r\n    //       title = 'Multi areas';\r\n    //       break;\r\n    //     }\r\n    //     if (this.selectedFeature == null)\r\n    //       title = 'All areas';\r\n    //     else\r\n    //       title = 'Area: ' + this.selectedFeatureName;\r\n    //     break;\r\n    //   case 'Zip':\r\n    //     if (this.selectedFeature == null)\r\n    //       title = 'All zips';\r\n    //     else\r\n    //       title = 'Zip: ' + this.selectedFeatureName;\r\n    //     break;\r\n    // }\r\n    return title;\r\n  },\r\n  updateHoverText: function() {\r\n    var title = this.getGeomName();\r\n    //show text on the hover box\r\n    this.$('#hoverOverlay').text(title);\r\n  },\r\n  getCurrentParams: function() {\r\n    var scope = this,\r\n      areatype = null,\r\n      areacodes = [];\r\n\r\n    _.each(scope.selectedLayers, function(sl) {\r\n      var props = sl.feature.properties;\r\n      //access properties to get area type and code            \r\n      if (typeof props.areatype != 'undefined' && typeof props.areacode != 'undefined') {\r\n        //get areatype\r\n        if (areatype == null)\r\n          areatype = props.areatype; //only set once\r\n\r\n        //get area code\r\n        areacodes.push(props.areacode);\r\n      }\r\n    });\r\n    if (areacodes.length > 0)\r\n      return {\r\n        areatype: areatype,\r\n        areacode: areacodes.join(',')\r\n      };\r\n    else\r\n      return {\r\n        areatype: areatype,\r\n        areacode: '0'\r\n      };\r\n  },\r\n  //select geometry by name\r\n  selectGeom: function(featureNames, selectStyle) {\r\n    var scope = this;\r\n    var mapViewer = this.mapViewer;\r\n    var geoJsonGrp = mapViewer.getGeoJsonGroup();\r\n\r\n    var style = selectStyle || {\r\n      fillOpacity: .5\r\n    };\r\n\r\n    _.each(featureNames, function(f) {\r\n      //loop through featureNames to find the selected geom\r\n      var feature = null;\r\n      //console.log(geoJsonGrp);\r\n      geoJsonGrp.getLayers()[0].eachLayer(function(layer) {\r\n        feature = layer.feature;\r\n        if (typeof feature != 'undefined') {\r\n          //console.log(feature);\r\n          if (feature.properties.name.toLowerCase() == f.toLowerCase()) {\r\n            //found the feature, now select it\r\n            layer.setStyle(style);\r\n            //keep up with last selected feature\r\n            scope.selectedFeature = layer;\r\n            scope.selectedFeatureName = f;\r\n            scope.selectedLayers.push(layer);\r\n          }\r\n        }\r\n      });\r\n      //show text on the hover box\r\n      scope.updateHoverText();\r\n      //select fetures with the attributes specified..to be implemented\r\n      if (typeof this.onGeomSelected == 'function')\r\n        this.onGeomSelected.call(this, feature);\r\n    });\r\n  },\r\n  addClusterMarkers: function(data, popupTemplate) {\r\n    var mapViewer = this.mapViewer;\r\n    mapViewer.clearClusterMarkers(); //clear current clustermakers\r\n    if (typeof data == 'undefined')\r\n      data = this.clusterMarkerCache;\r\n    else\r\n      this.clusterMarkerCache = data;\r\n\r\n    if (data.length == 0) {\r\n      console.log('Can not add cluster markers. Data is empty.');\r\n      return;\r\n    }\r\n    //check switch value\r\n    if (!this.showMarkers)\r\n      return;\r\n\r\n\r\n    //add new cluster markers\r\n    _.each(data, function(d) {\r\n      var m = mapViewer.createMarker(d.y_coord, d.x_coord, {});\r\n      m.bindPopup(d.template, {});\r\n      mapViewer.addClusterMarker(m);\r\n    });\r\n\r\n  },\r\n  clearClusterMarkers: function() {\r\n    var mapViewer = this.mapViewer;\r\n    mapViewer.clearClusterMarkers(); //clear current clustermakers\r\n  },\r\n  setShowMarkers: function(value) {\r\n    this.showMarkers = value;\r\n    if (!value)\r\n      this.clearClusterMarkers();\r\n    else\r\n      this.addClusterMarkers(); //passing no param to add the cached marker data\r\n  },\r\n  zoomToLocation: function(lon, lat, level) {\r\n    let lvl = level || 14;\r\n    this.mapViewer.zoomToPoint({\r\n      x: lon,\r\n      y: lat\r\n    }, lvl);\r\n  },\r\n  setMapClickMode: function(mode) {\r\n    if (mode == 'single')\r\n      this.singleSelect = true;\r\n    else if (mode == 'multi')\r\n      this.singleSelect = false;\r\n    else {\r\n      if (this.singleSelect)\r\n        console.log('Map click mode is: Single selection');\r\n      else\r\n        console.log('Map click mode is: Multi selection')\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = map;\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/js/shared/view/map.js"],"sourceRoot":""}