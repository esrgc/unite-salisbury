!function(e){function t(n){if(o[n])return o[n].exports;var a=o[n]={exports:{},id:n,loaded:!1};return e[n].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){"use strict";var n=o(4);$(function(){new n;Backbone.history.start(),console.log("App initiated...")})},function(e,t){"use strict";var o=function(e){var t=e,o=t.extend,r=null;return null==o||"undefined"==typeof o?(r=function(){"undefined"!=typeof this.initialize&&this.initialize.apply(this,arguments)},r.prototype=t):(r=function(){var e="function"==typeof this.initialize?this.initialize:"undefined";"function"==typeof e&&e.apply(this,arguments)},n(r,o),a(r.prototype,t)),r},n=function(e,t){var o=function(){};o.prototype=t.prototype,e.prototype=new o,e.prototype.constructor=e,e.parent=t.prototype},a=function(e,t){if(e=e||{},t){for(var o in t){var n=t[o];void 0!==n&&(e[o]=n)}var a="function"==typeof window.Event&&t instanceof window.Event;!a&&t.hasOwnProperty&&t.hasOwnProperty("toString")&&(e.toString=t.toString)}return e};e.exports={define:o,extend:n,copy:a}},,function(e,t,o){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var a=function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),r=o(6),i=o(5),s=function(){function e(){n(this,e),this._mapView=new r,this._calendarView=new i}return a(e,[{key:"initialize",value:function(){console.log("Initializing...");var e=this;e._mapView.render(),e._calendarView.onEventsLoaded=function(t,o){console.log("this event is called from controller!"),console.log(t);var n=_.groupBy(t,function(e){return e.id}),a=_.map(n,function(e,t){var o=e[0],n=o.start.local().format("dddd, MMMM Do YYYY, h:mm:ss a"),a=null!=o.end?o.end.local().format("dddd, MMMM Do YYYY, h: mm: ss a"):"";return{id:o._id,x_coord:o.location.x,y_coord:o.location.y,template:"\n      \t\t\t<h4>\n              <strong>"+o.title+'</strong>\n              <small>\n                <a href="edit?id='+o._id+'"><i class="fa fa-pencil"></i></a>\n              </small>\n            </h4>\n      \t\t\t<p>\n      \t\t\t\t<strong>Start</strong>: '+n+" <br/>\n      \t\t\t\t<strong>End</strong>: "+a+" <br/>\n      \t\t\t\t<strong>Description</strong>: "+o.description+" <br/>\n      \t\t\t\t<strong>Location</strong>: "+o.address+" "+o.city+", "+o.state+" "+o.zip+"\n      \t\t\t</p>\n      \t\t"}});e._mapView.addClusterMarkers(a)},e._calendarView.onEventClick=function(t,o,n){var a=t.location;"undefined"!=typeof a&&e._mapView.zoomToLocation(a.x,a.y)},e._calendarView.onEventMouseOver=function(e,t,o){},e._calendarView.render()}},{key:"zoomToLocation",value:function(e,t){this._mapView.zoomToLocation(e,t,16)}},{key:"mapView",get:function(){return this._mapView}},{key:"calendarView",get:function(){return this._calendarView}}]),e}();e.exports=s},function(e,t,o){"use strict";var n=o(3),a=new n,r=Backbone.Router.extend({name:"EventIndex",routes:{"":"init",":x/:y":"initZoom"},init:function(){a.initialize()},initZoom:function(e,t){(void 0).init(),a.zoomToLocation(e,t)}});e.exports=r},function(e,t){"use strict";var o=Backbone.View.extend({name:"CalendarView",el:"#calendar-area",render:function(){var e=this;this.$("#calendar").fullCalendar({header:{left:"prev,next,today",center:"title",right:"month,agendaWeek,agendaDay,listMonth"},editable:!1,eventSources:[{url:"feed"}],eventLimit:!0,eventMouseover:function(t,o,n){"function"==typeof e.onEventMouseOver&&e.onEventMouseOver.call(e,t,o,n)},eventClick:function(t,o,n){console.log(t),"function"==typeof e.onEventClick&&e.onEventClick.call(e,t,o,n)},loading:function(t,o){if(!t){console.log("done fetching event data!");var n=$("#calendar").fullCalendar("clientEvents");"function"==typeof e.onEventsLoaded&&e.onEventsLoaded.call(e,n,o)}}})}});e.exports=o},function(e,t,o){"use strict";var n=o(9),a=n.extend({name:"unite-map",el:".map",mapData:[],render:function(){var e=this;e.makeMap(),"function"==typeof e.onMapLoaded&&e.onMapLoaded()}});e.exports=a},function(e,t,o){"use strict";var n=o(1),a=o(8),r=n.define({name:"LeafletViewer",extend:a,_className:"LeafletViewer",initialize:function(e){a.prototype.initialize.apply(this,arguments);var t=L.tileLayer("https://{s}.tiles.mapbox.com/v3/esrgc.map-y9awf40v/{z}/{x}/{y}.png"),o={"Base Map":t};this.features=new L.FeatureGroup([]),this.geoJsonFeatures=L.geoJson(),this.clusterGroup=new L.MarkerClusterGroup(this.clusterOptions);var n={Overlays:this.geoJsonFeatures};if(this.map=L.map(this.el,{layers:[t,this.features,this.geoJsonFeatures,this.clusterGroup],center:this.center||new L.LatLng(39,-76.7),zoom:this.zoomLevel||7,scrollWheelZoom:this.scrollZoom||!1}),"undefined"!=typeof this.baseLayers)for(var r in this.baseLayers){var i=this.baseLayers[r];void 0!==i&&(o[r]=i)}var n={Overlays:this.geoJsonFeatures};if("undefined"!=typeof this.overlays)for(var r in this.overlays){var i=this.overlays[r];n[r]=i}},getGeoJsonGroup:function(){return this.geoJsonFeatures},getFeatureGroup:function(){return this.features},addGeoJsonLayer:function(e,t){return"undefined"==typeof e?void console.log("No data found"):(console.log("Adding data to map..."),"undefined"!=this.geoJsonFeatures&&("undefined"==typeof t?this.geoJsonFeatures.addLayer(L.geoJson(e)):this.geoJsonFeatures.addLayer(L.geoJson(e,t))),void console.log("------Data added to map"))},clearGeoJsonFeatures:function(){"undefined"!=this.geoJsonFeatures&&this.geoJsonFeatures.clearLayers()},addFeatureToFeatureGroup:function(e){var t=this.features;return"undefined"==typeof t?void console.log("No feature group found"):void(null!=e&&t.addLayer(e))},clearFeatures:function(){var e=this.features;return"undefined"==typeof e?void console.log("No feature group found"):void e.clearLayers()},createFeature:function(e){var t=new Wkt.Wkt;t.read(e);var o=t.toObject();return o},createMarker:function(e,t,o){return L.marker(L.latLng(e,t),o)},addClusterMarker:function(e){"undefined"!=typeof this.clusterGroup&&this.clusterGroup.addLayer(e)},clearClusterMarkers:function(){this.clusterGroup.clearLayers()},getClusterGroup:function(){return this.clusterGroup},getFeaturesBound:function(){var e=this.features;return"undefined"==typeof e?void console.log("No feature group found"):e.getBounds()},getGeoJsonFeaturesBound:function(){var e=this.geoJsonFeatures;return"undefined"==typeof e?void console.log("No geojson feature found"):e.getBounds()},zoomToFeatures:function(){var e=this.getFeaturesBound();"undefined"!=typeof e&&this.map.fitBounds(e)},zoomToGeoJsonFeatures:function(){var e=this.getGeoJsonFeaturesBound();"undefined"!=typeof e&&this.map.fitBounds(e)},zoomToPoint:function(e,t){var o=t||this.map.getMaxZoom();if("undefined"!=typeof e.x&&"undefined"!=typeof e.y){var n=new L.LatLng(e.y,e.x);this.map.setView(n,o)}else this.map.setView(e,o)},pointInPolygon:function(e,t){for(var o=e[0],n=e[1],a=!1,r=0,i=t.length-1;r<t.length;i=r++){var s=t[r][0],l=t[r][1],u=t[i][0],c=t[i][1],d=l>n!=c>n&&o<(u-s)*(n-l)/(c-l)+s;d&&(a=!a)}return a}});e.exports=r},function(e,t,o){"use strict";var n=o(1),a=n.define({name:"MapViewer",_className:"MapViewer",initialize:function(e){n.copy(this,e)},zoomToExtent:function(e){this.map.fitBounds(new L.LatLngBounds(new L.LatLng(e.xmin,e.ymin),new L.LatLng(e.xmax,e.ymax)))},zoomToFullExtent:function(){},zoomToXY:function(e,t,o){"undefined"==typeof o?this.map.setView(new L.LatLng(t,e),this.map.getMaxZoom()):this.map.setView(new L.LatLng(t,e),o)},zoomIn:function(){this.map.zoomIn()},zoomOut:function(){this.map.zoomOut()},zoomToDataExtent:function(e){this.map.fitBounds(e.getBounds())},panTo:function(e,t){this.map.panTo(new L.LatLng(t,e))},locate:function(){this.map.locateAndSetView(this.map.getMaxZoom()-2)}});e.exports=a},function(e,t,o){"use strict";var n=o(7),a=Backbone.View.extend({name:"base-map",el:".map",type:"map",mapControlsTemplate:"#map-control-tpl",mapData:[],mapDataLoaded:!1,selectedLayer:"County",selectedFeature:null,selectedFeatureName:"",selectedLayers:[],singleSelect:!1,mapParams:{areatype:"01",areacode:"0"},showMarkers:!0,clusterMarkerCache:[],initialize:function(){},render:function(e){this.makeMap(),this.loadMapData(e),this.renderControls(),console.log(this.name+" view has been rendered..")},makeMap:function(){this.mapViewer=new n({el:this.el,center:new L.LatLng(38.3607,-75.5994),zoomLevel:10,scrollZoom:!0,clusterOptions:{showCoverageOnHover:!1,spiderfyOnMaxZoom:!0,maxClusterRadius:40,iconCreateFunction:function(e){var t=e.getChildCount(),o=" marker-cluster-";return o+=t<=5?"small":t<=10?"medium":"large",new L.DivIcon({html:"<div><span>"+t+"</span></div>",className:"marker-cluster"+o,iconSize:new L.Point(40,40)})}}})},loadMapData:function(e){var t=this,o=new Backbone.Model,n=this.mapData,a=0,r=function r(i){return"undefined"==typeof i?void("function"==typeof t.onMapLoaded&&t.onMapLoaded()):void("layer"==i.type?(o.url=i.url,o.fetch({success:function(o){console.log("loaded map data for "+i.name);var s=o.toJSON();i.data=s,a++,a<n.length?r(n[a]):(t.mapDataLoaded=!0,t.showLayer(t.selectedLayer,e),"function"==typeof t.onMapLoaded&&t.onMapLoaded())}})):(a++,a<n.length?this.loadData(n[a]):(t.mapDataLoaded=!0,t.showLayer(t.selectedLayer,e),"function"==typeof t.onMapLoaded&&t.onMapLoaded())))};r(n[a])},showLayer:function(e,t){console.log("showing  layer "+e);var o=this,n=!1,a=this.getLayer(e);if("undefined"!=typeof a){o.selectedLayer=e,o.selectedFeatureName="",o.selectedFeature=null,o.selectedLayers=[];o.getGeomName();o.updateHoverText();var r=this.mapViewer,i=a.data,s=a.nameField,l=a.style,u={fillOpacity:.2},c=a.selectedStyle||{opacity:1,color:"#FCFF00",weight:4};console.log(t),"undefined"!=typeof t&&(t.style&&(l=t.style),t.mouseoverStyle&&(u=t.mouseoverStyle),t.selectedStyle&&(c=t.selectedStyle)),r.clearGeoJsonFeatures(),r.addGeoJsonLayer(i,{style:l,onEachFeature:function(e,t){n||(n=!0,o.mapParams.areatype=e.properties.areatype),t.on("click",function(t){var n=r.getGeoJsonGroup();_.each(n.getLayers(),function(e){_.each(e.getLayers(),function(t){e.resetStyle(t)})});for(var a=t.target,i=null,l=0;l<o.selectedLayers.length;l++){var u=o.selectedLayers[l];a.feature.properties.areacode==u.feature.properties.areacode&&(i=l)}if(null!=i?o.selectedLayers.splice(i,1):(1==o.singleSelect&&(o.selectedLayers=[]),o.selectedLayers.push(a)),o.selectedLayers.length>0){var d=o.selectedLayers[o.selectedLayers.length-1];o.selectedFeature=d,o.selectedFeatureName=d.feature.properties.name||d.feature.properties.region||d.feature.properties[s]||""}else o.selectedFeature=null;var f,p=null,h=[];_.each(o.selectedLayers,function(e){e.setStyle(c);var t=e.feature.properties;"undefined"!=typeof t.areatype&&"undefined"!=typeof t.areacode&&(null==p&&(p=t.areatype),h.push(t.areacode))}),f=h.length>0?{areatype:p,areacode:h.join(",")}:{areatype:p,areacode:"0"},o.mapParams=f,"function"==typeof o.onGeomSelected&&o.onGeomSelected.call(o,e,o.selectedLayers)}),t.on("mouseover",function(e){var t=e.target;t.setStyle(u),L.Browser.ie||L.Browser.opera||t.bringToFront();var n=e.target.feature.properties,a=n.name||n.region||n[s]||"";o.$("#hoverOverlay").text(a),"function"==typeof o.onFeatureMouseover&&o.onFeatureMouseover(t)}),t.on("mouseout",function(e){var n=r.getGeoJsonGroup();_.each(n.getLayers(),function(t){t.resetStyle(e.target)}),_.each(o.selectedLayers,function(e){e.setStyle(c)}),o.updateHoverText(),"function"==typeof o.onFeatureMouseout&&o.onFeatureMouseout(t)})}})}},getLayer:function(e){for(var t in this.mapData){var o=this.mapData[t];if(o.name==e)return o}},renderControls:function(){var e=this,t=this.mapData,o=Handlebars.compile($(this.mapControlsTemplate).html()),n=o({models:t});this.$("div.leaflet-bottom.leaflet-left").html(n),this.$(".overlays div.layers").on("click",function(t){e.mapControlClick.call(e,t)}),this.$("div.leaflet-top.leaflet-right").append('<div id="hoverOverlay" class="layerToggle" style="display: block;"></div>'),this.$("div.leaflet-top.leaflet-left .leaflet-control-zoom-in").after([' <a class="leaflet-control-zoom-out" id="zoomToExtent"',' href="#" title="Zoom to Full-extent">','<i class="fa fa-globe"></i>',"</a>"].join("")),this.$("#zoomToExtent").on("click",function(t){return e.mapViewer.zoomToGeoJsonFeatures(),!1})},mapControlClick:function(e){var t=e.currentTarget,o=$(t).attr("data-name");console.log("map layer "+o+" control clicked"),this.showLayer(o),this.$(t).parent().find('i[role="checkbox"]').remove(),$(t).find("p").append('<i class="fa fa-check" role="checkbox"></i>'),"function"==typeof this.onLayerChanged&&this.onLayerChanged.call(this,o)},getGeomName:function(){var e="";return e=this.selectedLayers.length>1?"Multi Areas":null==this.selectedFeature?"Statewide":this.selectedLayer+" "+this.selectedFeatureName},updateHoverText:function(){var e=this.getGeomName();this.$("#hoverOverlay").text(e)},getCurrentParams:function(){var e=this,t=null,o=[];return _.each(e.selectedLayers,function(e){var n=e.feature.properties;"undefined"!=typeof n.areatype&&"undefined"!=typeof n.areacode&&(null==t&&(t=n.areatype),o.push(n.areacode))}),o.length>0?{areatype:t,areacode:o.join(",")}:{areatype:t,areacode:"0"}},selectGeom:function(e,t){var o=this,n=this.mapViewer,a=n.getGeoJsonGroup(),r=t||{fillOpacity:.5};_.each(e,function(e){var t=null;a.getLayers()[0].eachLayer(function(n){t=n.feature,"undefined"!=typeof t&&t.properties.name.toLowerCase()==e.toLowerCase()&&(n.setStyle(r),o.selectedFeature=n,o.selectedFeatureName=e,o.selectedLayers.push(n))}),o.updateHoverText(),"function"==typeof this.onGeomSelected&&this.onGeomSelected.call(this,t)})},addClusterMarkers:function(e,t){var o=this.mapViewer;return o.clearClusterMarkers(),"undefined"==typeof e?e=this.clusterMarkerCache:this.clusterMarkerCache=e,0==e.length?void console.log("Can not add cluster markers. Data is empty."):void(this.showMarkers&&_.each(e,function(e){var t=o.createMarker(e.y_coord,e.x_coord,{});t.bindPopup(e.template,{}),o.addClusterMarker(t)}))},clearClusterMarkers:function(){var e=this.mapViewer;e.clearClusterMarkers()},setShowMarkers:function(e){this.showMarkers=e,e?this.addClusterMarkers():this.clearClusterMarkers()},zoomToLocation:function(e,t,o){var n=o||14;this.mapViewer.zoomToPoint({x:e,y:t},n)},setMapClickMode:function(e){"single"==e?this.singleSelect=!0:"multi"==e?this.singleSelect=!1:this.singleSelect?console.log("Map click mode is: Single selection"):console.log("Map click mode is: Multi selection")}});e.exports=a}]);
//# sourceMappingURL=eventIndex-bundle.js.map